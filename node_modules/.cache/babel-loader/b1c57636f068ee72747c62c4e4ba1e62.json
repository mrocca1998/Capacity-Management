{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\ProjectsList.js\";\nimport * as React from \"react\";\nimport AllocationForm from \"./AllocationList\";\nimport EmployeeList from './EmployeeList';\n\nclass ProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      id: '',\n      title: '',\n      startDate: '',\n      endDate: '',\n      totalPoints: '',\n      baPoints: '',\n      qaPoints: '',\n      devPoints: '',\n      isShowing: ''\n    };\n    this.formStyle = {\n      border: '2px solid black',\n      backgroundColor: '#d3e4ee',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: this.props.height\n    };\n    this.postProject = this.postProject.bind(this);\n    this.putProject = this.putProject.bind(this);\n    this.fillState = this.fillState.bind(this);\n  }\n\n  async postProject(event) {\n    event.preventDefault();\n\n    try {\n      fetch('https://localhost:44391/api/projects', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: this.state.title,\n          startDate: this.state.startDate,\n          endDate: this.state.endDate,\n          totalPoints: this.state.totalPoints,\n          baPoints: this.state.baPoints,\n          qaPoints: this.state.qaPoints,\n          devPoints: this.state.devPoints,\n          isShowing: false\n        })\n      }).then(result => result.json()).then(json => {\n        if (json.length > 0) {\n          alert(json);\n        }\n\n        this.props.refreshState();\n      }); //console.log('Result ' + result)\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async putProject(event) {\n    event.preventDefault();\n\n    try {\n      await fetch('https://localhost:44391/api/Projects/' + this.props.projectId, {\n        method: 'put',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(result => result.json()).then(json => {\n        if (json.length > 0) {\n          alert(json);\n        } else {\n          this.props.toggleEdit();\n        }\n\n        this.props.refreshState();\n      });\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.props.refreshState();\n  }\n\n  fillState() {\n    var startDate = JSON.stringify(new Date(this.props.startDate)).slice(1, 11);\n    var endDate = null;\n\n    if (this.props.endDate != null) {\n      endDate = JSON.stringify(new Date(this.props.endDate)).slice(1, 11);\n    }\n\n    this.setState({\n      id: this.props.projectId,\n      title: this.props.title,\n      startDate: startDate,\n      endDate: endDate,\n      totalPoints: this.props.totalPoints,\n      baPoints: this.props.baPoints,\n      qaPoints: this.props.qaPoints,\n      devPoints: this.props.devPoints,\n      isShowing: this.props.isShowing\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.isEditing) {\n      this.fillState();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.isEditing ? this.putProject : this.postProject //style={{backgroundColor: this.props.isEditing ? '#ddd3ee' :'#d3e4ee'}}\n      ,\n      style: this.formStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Project Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.changeHandler,\n      required: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \" Start Date: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"startDate\",\n      value: this.state.startDate,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \" End Date: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"endDate\",\n      value: this.state.endDate,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"Total Points: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"totalPoints\",\n      value: this.state.totalPoints,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, \"BA Points: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"baPoints\",\n      value: this.state.baPoints,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, \" QA Points: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"qaPoints\",\n      value: this.state.qaPoints,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, \" Developer Points: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"devPoints\",\n      value: this.state.devPoints,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }), this.props.isEditing ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.toggleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 43\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 100\n      }\n    }, \"Confirm\")) : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 150\n      }\n    }, \"Add Project\")));\n  }\n\n}\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    };\n    this.deleteProject = this.deleteProject.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.toggleShowing = this.toggleShowing.bind(this);\n  }\n\n  toggleEdit() {\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  }\n\n  async deleteProject(id) {\n    if (window.confirm('Are you sure')) {\n      try {\n        const result = await fetch('https://localhost:44391/api/projects/' + this.props.id, {\n          method: 'delete',\n          headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n          }\n        });\n        console.log('Result ' + result);\n      } catch (e) {\n        console.log(e);\n      }\n\n      this.props.refreshState();\n    }\n  }\n\n  toggleShowing() {\n    try {\n      const result = fetch('https://localhost:44391/api/projects/' + this.props.id, {\n        method: 'put',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.props.id,\n          isShowing: !this.props.isShowing\n        })\n      });\n      console.log('Result ' + result);\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.props.refreshState();\n  }\n\n  render() {\n    const project = this.props;\n\n    if (this.state.isEditing) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ProjectForm, {\n        refreshState: this.props.refreshState,\n        isEditing: this.state.isEditing,\n        toggleEdit: this.toggleEdit,\n        projectId: this.props.id,\n        title: this.props.title,\n        startDate: this.props.startDate,\n        endDate: this.props.endDate,\n        totalPoints: this.props.totalPoints,\n        baPoints: this.props.baPoints,\n        qaPoints: this.props.qaPoints,\n        devPoints: this.props.devPoints,\n        isShowing: this.props.isShowing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(EmployeeList, {\n        refreshState: this.props.refreshState,\n        projectId: this.props.id,\n        employees: this.props.employees,\n        allocations: this.props.allocations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(AllocationForm, {\n        refreshState: this.props.refreshState,\n        projectId: project.id,\n        employees: project.employees,\n        allocations: project.allocationState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#ddd3ee'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }, \"Project: \", project.title, \" Start Date: \", project.startDate.substring(5, 7), \"/\", project.startDate.substring(8, 10), \"/\", project.startDate.substring(0, 4), \" \", project.endDate === null ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 233\n        }\n      }) : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 243\n        }\n      }, \"End Date: \", project.endDate.substring(5, 7), \"/\", project.endDate.substring(8, 10), \"/\", project.endDate.substring(0, 4), \" \"), \" Total Points: \", project.totalPoints, \" BA Points: \", project.baPoints, \" QA Points: \", project.qaPoints, \" Dev Points: \", project.devPoints, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.deleteProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://icon-library.com/images/delete-icon-png-16x16/delete-icon-png-16x16-21.jpg\",\n        alt: \"my image\",\n        width: \"12\",\n        height: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 54\n        }\n      }))), /*#__PURE__*/React.createElement(EmployeeList, {\n        refreshState: this.props.refreshState,\n        projectId: this.props.id,\n        employees: this.props.employees,\n        allocations: this.props.allocations,\n        addAllocation: this.props.addAllocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(AllocationForm, {\n        refreshState: this.props.refreshState,\n        projectId: project.id,\n        employees: project.employees,\n        allocations: project.allocationState,\n        isEditing: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n}\n\nexport { ProjectForm, Project };","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/ProjectsList.js"],"names":["React","AllocationForm","EmployeeList","ProjectForm","Component","constructor","props","changeHandler","event","setState","target","name","value","state","id","title","startDate","endDate","totalPoints","baPoints","qaPoints","devPoints","isShowing","formStyle","border","backgroundColor","marginLeft","marginRight","marginTop","height","postProject","bind","putProject","fillState","preventDefault","fetch","method","headers","body","JSON","stringify","then","result","json","length","alert","refreshState","e","console","log","projectId","toggleEdit","Date","slice","componentDidMount","isEditing","render","Project","deleteProject","toggleShowing","window","confirm","project","employees","allocations","allocationState","substring","addAllocation"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport AllocationForm from \"./AllocationList\";\r\nimport EmployeeList from './EmployeeList'\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: '',\r\n            title : '',\r\n            startDate : '',\r\n            endDate : '',\r\n            totalPoints: '',\r\n            baPoints : '',\r\n            qaPoints : '',\r\n            devPoints : '',\r\n            isShowing: ''\r\n        }\r\n        this.formStyle = {\r\n            border: '2px solid black',\r\n            backgroundColor: '#d3e4ee',\r\n            marginLeft : 'auto',\r\n            marginRight : 'auto',\r\n            marginTop : this.props.height\r\n          }\r\n        this.postProject = this.postProject.bind(this);\r\n        this.putProject = this.putProject.bind(this);\r\n        this.fillState = this.fillState.bind(this);\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n    \r\n    async postProject(event) {\r\n        event.preventDefault();\r\n        try {\r\n            fetch('https://localhost:44391/api/projects', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title : this.state.title,\r\n                    startDate : this.state.startDate,\r\n                    endDate : this.state.endDate,\r\n                    totalPoints: this.state.totalPoints,\r\n                    baPoints : this.state.baPoints,\r\n                    qaPoints : this.state.qaPoints,\r\n                    devPoints : this.state.devPoints,\r\n                    isShowing: false\r\n                })\r\n            })\r\n            .then(result => result.json())\r\n            .then(json => {\r\n                if (json.length > 0) {\r\n                    alert(json);\r\n                }  \r\n                this.props.refreshState();     \r\n            })\r\n            //console.log('Result ' + result)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n\r\n    async putProject(event) {\r\n        event.preventDefault();\r\n        try {\r\n            await fetch('https://localhost:44391/api/Projects/' + this.props.projectId, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify(this.state)\r\n            })\r\n            .then(result => result.json())\r\n            .then(json => {\r\n                if (json.length > 0) {\r\n                    alert(json);\r\n                }\r\n                else {\r\n                    this.props.toggleEdit();\r\n                }\r\n                this.props.refreshState();     \r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        \r\n\r\n        this.props.refreshState();\r\n    }\r\n\r\n    fillState() {\r\n        var startDate = JSON.stringify(new Date(this.props.startDate)).slice(1,11);\r\n        var endDate = null;\r\n        if (this.props.endDate != null) {\r\n            endDate = JSON.stringify(new Date(this.props.endDate)).slice(1,11);\r\n        }\r\n        this.setState({\r\n            id: this.props.projectId,\r\n            title : this.props.title,\r\n            startDate : startDate,\r\n            endDate : endDate,\r\n            totalPoints: this.props.totalPoints,\r\n            baPoints : this.props.baPoints,\r\n            qaPoints : this.props.qaPoints,\r\n            devPoints : this.props.devPoints,\r\n            isShowing: this.props.isShowing\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isEditing) {\r\n            this.fillState();\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\t        \r\n            {/* Form */}\r\n            <form \r\n                onSubmit={this.props.isEditing ? this.putProject : this.postProject} \r\n                //style={{backgroundColor: this.props.isEditing ? '#ddd3ee' :'#d3e4ee'}}\r\n                style = {this.formStyle}\r\n            >\r\n                            \r\n            <label>Project Title: </label>\r\n            <input \r\n            type=\"text\"\r\n            name = 'title'\r\n            value = {this.state.title}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            autoComplete=\"off\"\r\n            />\r\n            \r\n            {/* Dates */}\r\n            <label> Start Date: </label>\r\n            <input \r\n            type=\"date\"\r\n            name = 'startDate'\r\n            value = {this.state.startDate}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <label> End Date: </label>\r\n            <input \r\n            type=\"date\"\r\n            name = 'endDate'\r\n            value = {this.state.endDate}\r\n            onChange = {this.changeHandler}\r\n            />\r\n\r\n            \r\n            {/* Points */}\r\n            <label>Total Points: </label>\r\n            <input \r\n            type=\"number\"\r\n            name = 'totalPoints'\r\n            value = {this.state.totalPoints}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <br /><label>BA Points: </label>\r\n            <input \r\n            type=\"number\"\r\n            name = 'baPoints'\r\n            value = {this.state.baPoints}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <label> QA Points: </label>\r\n            <input \r\n            type=\"number\"\r\n            name = 'qaPoints'\r\n            value = {this.state.qaPoints}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <label > Developer Points: </label>\r\n            <input \r\n            type=\"number\"\r\n            name = 'devPoints'\r\n            value = {this.state.devPoints}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            \r\n            {this.props.isEditing ? <span><button onClick = {this.props.toggleEdit}>Cancel</button><button type = 'submit'>Confirm</button></span> : <button type = 'submit'>Add Project</button>}\r\n            </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Project extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isEditing: false\r\n        }\r\n        this.deleteProject = this.deleteProject.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.toggleShowing = this.toggleShowing.bind(this);\r\n    }\r\n\r\n    toggleEdit() {\r\n        this.setState ({\r\n            isEditing: !this.state.isEditing\r\n        })\r\n    }\r\n\r\n    async deleteProject(id) {\r\n        if(window.confirm('Are you sure')) {\r\n            \r\n            try { \r\n                const result = await fetch('https://localhost:44391/api/projects/' + this.props.id, {\r\n                    method: 'delete',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type':'application/json',\r\n                    }\r\n                })\r\n    \r\n                console.log('Result ' + result)\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n            this.props.refreshState();\r\n        }\r\n    }\r\n\r\n    toggleShowing() {\r\n        try {\r\n            const result = fetch('https://localhost:44391/api/projects/' + this.props.id, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    id: this.props.id,\r\n                    isShowing: !this.props.isShowing\r\n               })\r\n            });\r\n\r\n            console.log('Result ' + result)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.props.refreshState();\r\n    }\r\n\trender() {\r\n    const project = this.props;\r\n\r\n    if (this.state.isEditing) {\r\n        return (\r\n            <div>\r\n                <ProjectForm \r\n                    refreshState = {this.props.refreshState}\r\n                    isEditing = {this.state.isEditing} \r\n                    toggleEdit = {this.toggleEdit}\r\n                    projectId = {this.props.id}\r\n                    title = {this.props.title}\r\n                    startDate = {this.props.startDate}\r\n                    endDate = {this.props.endDate}\r\n                    totalPoints = {this.props.totalPoints}\r\n                    baPoints = {this.props.baPoints}\r\n                    qaPoints = {this.props.qaPoints}\r\n                    devPoints = {this.props.devPoints}\r\n                    isShowing = {this.props.isShowing}\r\n                />\r\n                <EmployeeList refreshState = {this.props.refreshState} projectId = {this.props.id} employees = {this.props.employees} allocations = {this.props.allocations} />               \r\n                <AllocationForm \r\n                    refreshState = {this.props.refreshState}\r\n                    projectId = {project.id} \r\n                    employees = {project.employees} \r\n                    allocations = {project.allocationState}\r\n                />\r\n            </div>\r\n        )\r\n    }  else {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor : '#ddd3ee'}}>Project: {project.title} Start Date: {project.startDate.substring(5,7)}/{project.startDate.substring(8,10)}/{project.startDate.substring(0,4)} {project.endDate === null ? <span/> : <span>End Date: {project.endDate.substring(5,7)}/{project.endDate.substring(8,10)}/{project.endDate.substring(0,4)} </span>} Total Points: {project.totalPoints} BA Points: {project.baPoints} QA Points: {project.qaPoints} Dev Points: {project.devPoints}\r\n                <button onClick = {this.toggleEdit}>Update</button>\r\n                <button onClick={this.deleteProject}><img src=\"https://icon-library.com/images/delete-icon-png-16x16/delete-icon-png-16x16-21.jpg\" alt=\"my image\" width=\"12\" height=\"12\"/></button>\r\n                </div>\r\n                <EmployeeList refreshState = {this.props.refreshState} projectId = {this.props.id} employees = {this.props.employees} allocations = {this.props.allocations} addAllocation = {this.props.addAllocation}/>\r\n                <AllocationForm\r\n                    refreshState = {this.props.refreshState} \r\n                    projectId = {project.id} \r\n                    employees = {project.employees} \r\n                    allocations = {project.allocationState} \r\n                    isEditing = {false}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n  \t\r\n  }\r\n}\r\nexport { ProjectForm, Project, };"]},"metadata":{},"sourceType":"module"}