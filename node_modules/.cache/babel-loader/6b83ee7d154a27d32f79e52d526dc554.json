{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\AllocationList.js\";\nimport * as React from \"react\";\nimport EmployeeList from './EmployeeList';\n\nclass AllocationList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      employee: '',\n      role: 'BA',\n      startMonth: '',\n      endMonth: '',\n      allocation: '',\n      weight: ''\n    };\n    this.postAllocation = this.postAllocation.bind(this);\n  }\n\n  async postAllocation(event) {\n    event.preventDefault();\n\n    try {\n      if (this.props.employees.filter(employee => employee.name === this.state.employee).length === 0) {\n        try {\n          const emResult = await fetch('https://localhost:44391/api/employees', {\n            method: 'post',\n            headers: {\n              'Accept': 'application/json',\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              name: this.state.employee,\n              role: this.state.role\n            })\n          });\n          console.log('Result ' + emResult);\n        } catch (e) {\n          console.log(e);\n        }\n\n        this.props.refreshState();\n      }\n\n      const alResult = await fetch('https://localhost:44391/api/allocations', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          projectId: this.props.projectId,\n          employeeId: this.props.employees.filter(employee => employee.name === this.state.employee)[0].id,\n          startDate: this.state.startMonth,\n          endDate: this.state.endMonth,\n          allocation1: this.state.allocation,\n          workWeight: this.state.weight,\n          role: this.state.role\n        })\n      });\n      console.log('Result ' + alResult);\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.props.refreshState();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(EmployeeList, {\n      refreshState: this.props.refreshState,\n      projectId: this.props.projectId,\n      employees: this.props.employees,\n      allocations: this.props.allocations,\n      addAllocation: this.props.addAllocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.postAllocation,\n      style: {\n        backgroundColor: '#d3eedd'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, \"Employee: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      list: \"employees\",\n      name: \"employee\",\n      value: this.state.employee,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, this.props.employees.map(employee => /*#__PURE__*/React.createElement(EmployeeDropdown, Object.assign({}, employee, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 55\n      }\n    })))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \" Role: \"), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      name: \"role\",\n      value: this.state.role,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"BA\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"QA\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Dev\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \" Start Month: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"month\",\n      min: \"2020-07\",\n      defaultValue: \"2020-07\",\n      name: \"startMonth\",\n      value: this.state.startMonth,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \" End Month: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"month\",\n      min: \"2020-07\",\n      defaultValue: \"2020-07\",\n      name: \"endMonth\",\n      value: this.state.endMonth,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \" Allocation: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      max: \"1\",\n      step: \"0.01\",\n      name: \"allocation\",\n      value: this.state.allocation,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \" Weight: \"), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      name: \"weight\",\n      value: this.state.weight,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \".25\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \".5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \".75\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"1\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Add Allocation\")));\n  }\n\n}\n\nclass EmployeeDropdown extends React.Component {\n  render() {\n    const employee = this.props;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, employee.name);\n  }\n\n}\n\nexport default AllocationList;","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/AllocationList.js"],"names":["React","EmployeeList","AllocationList","Component","constructor","props","changeHandler","event","setState","target","name","value","state","employee","role","startMonth","endMonth","allocation","weight","postAllocation","bind","preventDefault","employees","filter","length","emResult","fetch","method","headers","body","JSON","stringify","console","log","e","refreshState","alResult","projectId","employeeId","id","startDate","endDate","allocation1","workWeight","render","allocations","addAllocation","backgroundColor","map","EmployeeDropdown"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport EmployeeList from './EmployeeList'\r\n\r\nclass AllocationList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employee : '',\r\n            role: 'BA',\r\n            startMonth : '',\r\n            endMonth : '',\r\n            allocation: '',\r\n            weight : ''\r\n        }\r\n        this.postAllocation = this.postAllocation.bind(this);\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n    \r\n    async postAllocation(event) {\r\n        event.preventDefault();\r\n        try { \r\n            if (this.props.employees.filter(employee => employee.name === this.state.employee).length === 0) {\r\n                try { \r\n                    const emResult = await fetch('https://localhost:44391/api/employees', {\r\n                        method: 'post',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type':'application/json',\r\n                        },\r\n                        body: JSON.stringify({\r\n                            name : this.state.employee,\r\n                            role : this.state.role\r\n                        })\r\n                    });\r\n        \r\n                    console.log('Result ' + emResult)\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n                this.props.refreshState();\r\n            }\r\n            const alResult = await fetch('https://localhost:44391/api/allocations', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    projectId: this.props.projectId,\r\n                    employeeId: \r\n                    this.props.employees.filter(employee => employee.name === this.state.employee)[0].id,\r\n                    startDate: this.state.startMonth,\r\n                    endDate: this.state.endMonth,\r\n                    allocation1: this.state.allocation,\r\n                    workWeight: this.state.weight,\r\n                    role: this.state.role\r\n                })\r\n            });\r\n\r\n            console.log('Result ' + alResult)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.props.refreshState();\r\n    }\r\n    render() {\r\n        return (\r\n\t\t\t<div>\r\n            <EmployeeList refreshState = {this.props.refreshState} projectId = {this.props.projectId} employees = {this.props.employees} allocations = {this.props.allocations} addAllocation = {this.props.addAllocation}/>\r\n\t\t\t<form onSubmit={this.postAllocation} style = {{backgroundColor : '#d3eedd'}}>\r\n\t\t\t<label >Employee: </label>\r\n            <input type=\"text\" list=\"employees\"\r\n            name = 'employee'\r\n            value = {this.state.employee}\r\n            onChange = {this.changeHandler}/>\r\n            <datalist id=\"employees\">\r\n                {this.props.employees.map(employee => <EmployeeDropdown {...employee}/>)}\r\n            </datalist>\r\n            <label > Role: </label>\r\n            <select type = \"text\" \r\n            name = 'role'\r\n            value = {this.state.role}\r\n            onChange = {this.changeHandler}\r\n            required>\r\n                <option>BA</option>\r\n                <option>QA</option>\r\n                <option>Dev</option>\r\n            </select>\r\n            <label > Start Month: </label>\r\n            <input type=\"month\" min=\"2020-07\" defaultValue=\"2020-07\" \r\n            name = 'startMonth'\r\n            value = {this.state.startMonth}\r\n            onChange = {this.changeHandler}\r\n            required/>\r\n            <label > End Month: </label>\r\n            <input type=\"month\" min=\"2020-07\" defaultValue=\"2020-07\" \r\n            name = 'endMonth'\r\n            value = {this.state.endMonth}\r\n            onChange = {this.changeHandler}/>\r\n            <label> Allocation: </label>\r\n            <input \r\n            type=\"number\" min=\"0\" max=\"1\" step=\"0.01\" \r\n            name = 'allocation'\r\n            value = {this.state.allocation}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <label> Weight: </label>\r\n            <select type = \"text\" \r\n            name = 'weight'\r\n            value = {this.state.weight}\r\n            onChange = {this.changeHandler}>\r\n                <option>.25</option>\r\n                <option>.5</option>\r\n                <option>.75</option>\r\n                <option>1</option>\r\n            </select>        \r\n            <button type = 'submit'>Add Allocation</button>\r\n\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nclass EmployeeDropdown extends React.Component {\r\n\trender() {\r\n  \tconst employee = this.props;\r\n  \treturn (\r\n        <option>{employee.name}</option>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllocationList;"]},"metadata":{},"sourceType":"module"}