{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\CapChart.js\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Chart } from \"react-google-charts\";\n\nclass CapChart extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-pretty-chart-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      width: '100%',\n      height: '400px',\n      chartType: \"Gantt\",\n      loader: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, \"Loading Chart\"),\n      data: this.props.data,\n      options: {\n        height: 400,\n        gantt: {\n          trackHeight: 30\n        }\n      },\n      rootProps: {\n        'data-testid': '2'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass BreakdownChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshState = () => {\n      fetch('https://localhost:44391/api/projects/duration/' + this.props.id).then(res => res.json()).then(json => {\n        this.setState({\n          baData: ['BA', 'BA', 'BA', this.props.startDate, new Date(json.baEndDate), null, null, null],\n          qaDate: ['QA', 'QA', 'QA', this.props.startDate, new Date(json.qaEndDate), null, null, null],\n          devData: ['Dev', 'Dev', 'Dev', this.props.startDate, new Date(json.devEndDate), null, null, null]\n        });\n      });\n    };\n\n    this.state = {\n      baData: [],\n      qaData: [],\n      devData: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshState();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CapacityChart, {\n      data: [this.props.chartSettings, this.state.baData, this.state.qaData, this.state.devData],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default CapChart;","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/CapChart.js"],"names":["React","render","Chart","CapChart","Component","props","data","height","gantt","trackHeight","BreakdownChart","constructor","refreshState","fetch","id","then","res","json","setState","baData","startDate","Date","baEndDate","qaDate","qaEndDate","devData","devEndDate","state","qaData","componentDidMount","chartSettings"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,QAAsB,qBAAtB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCH,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACN,MAAA,KAAK,EAAE,MADD;AAEN,MAAA,MAAM,EAAE,OAFF;AAGN,MAAA,SAAS,EAAC,OAHJ;AAIN,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF;AAKN,MAAA,IAAI,EAAE,KAAKI,KAAL,CAAWC,IALX;AAMN,MAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,GADD;AAEPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE;AADR;AAFA,OANH;AAYN,MAAA,SAAS,EAAE;AAAE,uBAAe;AAAjB,OAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAkBD;;AApBoC;;AAuBvC,MAAMC,cAAN,SAA6BV,KAAK,CAACI,SAAnC,CAA6C;AAC3CO,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBO,YARmB,GAQJ,MAAM;AACnBC,MAAAA,KAAK,CAAC,mDAAmD,KAAKR,KAAL,CAAWS,EAA/D,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACV,aAAKC,QAAL,CAAc;AACVC,UAAAA,MAAM,EAAE,CACN,IADM,EAEN,IAFM,EAGN,IAHM,EAIN,KAAKd,KAAL,CAAWe,SAJL,EAKN,IAAIC,IAAJ,CAASJ,IAAI,CAACK,SAAd,CALM,EAMN,IANM,EAON,IAPM,EAQN,IARM,CADE;AAWVC,UAAAA,MAAM,EAAE,CACN,IADM,EAEN,IAFM,EAGN,IAHM,EAIN,KAAKlB,KAAL,CAAWe,SAJL,EAKN,IAAIC,IAAJ,CAASJ,IAAI,CAACO,SAAd,CALM,EAMN,IANM,EAON,IAPM,EAQN,IARM,CAXE;AAqBVC,UAAAA,OAAO,EAAE,CACP,KADO,EAEP,KAFO,EAGP,KAHO,EAIP,KAAKpB,KAAL,CAAWe,SAJJ,EAKP,IAAIC,IAAJ,CAASJ,IAAI,CAACS,UAAd,CALO,EAMP,IANO,EAOP,IAPO,EAQP,IARO;AArBC,SAAd;AAgCD,OAnCL;AAqCD,KA9CkB;;AAEjB,SAAKC,KAAL,GAAa;AACXR,MAAAA,MAAM,EAAE,EADG;AACCS,MAAAA,MAAM,EAAC,EADR;AACYH,MAAAA,OAAO,EAAE;AADrB,KAAb;AAID;;AA0CDI,EAAAA,iBAAiB,GAAI;AACnB,SAAKjB,YAAL;AACD;;AAEDX,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAI,CAAC,KAAKI,KAAL,CAAWyB,aAAZ,EAA2B,KAAKH,KAAL,CAAWR,MAAtC,EAA8C,KAAKQ,KAAL,CAAWC,MAAzD,EAAiE,KAAKD,KAAL,CAAWF,OAA5E,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAzD0C;;AA4D7C,eAAetB,QAAf","sourcesContent":["import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Chart } from \"react-google-charts\";\n \nclass CapChart extends React.Component {\n  render() {\n    return (\n      <div className={\"my-pretty-chart-container\"}>\n        <Chart\n  width={'100%'}\n  height={'400px'}\n  chartType=\"Gantt\"\n  loader={<div>Loading Chart</div>}\n  data={this.props.data}\n  options={{\n    height: 400,\n    gantt: {\n      trackHeight: 30,\n    },\n  }}\n  rootProps={{ 'data-testid': '2' }}\n/>\n      </div>\n    );\n  }\n}\n\nclass BreakdownChart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      baData: [], qaData:[], devData: [\n      ]\n    }\n  }\n\n  refreshState = () => {\n    fetch('https://localhost:44391/api/projects/duration/' + this.props.id)\n      .then(res => res.json())\n      .then(json => {\n          this.setState({\n              baData: [\n                'BA',\n                'BA',\n                'BA',\n                this.props.startDate,\n                new Date(json.baEndDate),\n                null,\n                null,\n                null\n              ],\n              qaDate: [\n                'QA',\n                'QA',\n                'QA',\n                this.props.startDate,\n                new Date(json.qaEndDate),\n                null,\n                null,\n                null\n              ],\n              devData: [\n                'Dev',\n                'Dev',\n                'Dev',\n                this.props.startDate,\n                new Date(json.devEndDate),\n                null,\n                null,\n                null\n              ] \n              });\n        },\n      )\n  }\n\n  componentDidMount () {\n    this.refreshState();\n  }\n  \n  render() {   \n    return (     \n      <CapacityChart data = {[this.props.chartSettings, this.state.baData, this.state.qaData, this.state.devData]} />\n    )\n  }\n}\n\nexport default CapChart;\n\n"]},"metadata":{},"sourceType":"module"}