{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CapChart from './CapChart';\nimport BreakdownChart from './BreakdownChart';\nimport ProjectsList, { ProjectForm, Project } from './ProjectsList';\nimport * as serviceWorker from './serviceWorker';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css'; //chart library format\n// const chartSettings = [\n//     [\n//       { type: 'string', label: 'Task ID' },\n//       { type: 'string', label: 'Task Name' },\n//       { type: 'string', label: 'Resource' },\n//       { type: 'date', label: 'Start Date' },\n//       { type: 'date', label: 'End Date' },\n//       { type: 'number', label: 'Duration' },\n//       { type: 'number', label: 'Percent Complete' },\n//       { type: 'string', label: 'Dependencies' },\n//     ], \n//     [\n//       'EEL',\n//       'EEL',\n//       null,\n//       new Date(2020, 5, 1),\n//       new Date(2020, 7, 14),\n//       null,\n//       100,\n//       null,\n//     ],\n//   ];\n// padding: 10px;\n//         border: 2px solid #1c87c9;\n//         border-radius: 5px;\n//         background-color: #e5e5e5;\n//         text-align: center;\n\nfunction Legend(props) {\n  const tableStyle = {\n    border: '2px solid black',\n    backgroundColor: '#d3e4ee',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  };\n  return /*#__PURE__*/React.createElement(\"table\", {\n    alight: \"center\",\n    rules: \"all\",\n    style: tableStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    width: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Weight\"), /*#__PURE__*/React.createElement(\"th\", {\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    width: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"Hours per point\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \".25\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Lead, not much direct work\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \"65\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \".50\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \"New Employee\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, \"30\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, \".75\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \"Progressing towards full capacity or also mentoring junior members\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, \"16\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \"Full capactiy\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, \"8\")));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshState = () => {\n      fetch('https://localhost:44391/api/projects').then(res => res.json()).then(json => {\n        const projectData = [this.state.chartData[0]];\n        json.map(project => projectData.push([project.id, project.title, null, new Date(project.startDate), new Date(project.calcEndDate), null, null, null]));\n        this.setState({\n          projects: json,\n          chartData: projectData\n        });\n      });\n      this.setState({\n        empty: this.state.projects.length === 1\n      });\n      fetch('https://localhost:44391/api/employees').then(res => res.json()).then(json => {\n        this.setState({\n          employees: json\n        });\n      });\n      fetch('https://localhost:44391/api/allocations').then(res => res.json()).then(json => {\n        this.setState({\n          allocations: json\n        });\n      }); // this.setState({\n      //   isEmpty: this.state.projects.length === 0\n      // })\n    };\n\n    this.state = {\n      chartData: [[{\n        type: 'string',\n        label: 'Task ID'\n      }, {\n        type: 'string',\n        label: 'Task Name'\n      }, {\n        type: 'string',\n        label: 'Resource'\n      }, {\n        type: 'date',\n        label: 'Start Date'\n      }, {\n        type: 'date',\n        label: 'End Date'\n      }, {\n        type: 'number',\n        label: 'Duration'\n      }, {\n        type: 'number',\n        label: 'Percent Complete'\n      }, {\n        type: 'string',\n        label: 'Dependencies'\n      }]],\n      projects: [],\n      allocations: [],\n      employees: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshState();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 14\n      }\n    }, this.props.title)), this.state.projects.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(CapChart, {\n      data: this.state.chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 54\n      }\n    }), /*#__PURE__*/React.createElement(ProjectForm, {\n      isEditing: false,\n      allocations: this.state.allocations,\n      employees: this.state.employees,\n      projects: this.state.projects,\n      refreshState: this.refreshState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tabs, {\n      defaultIndex: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TabList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, this.state.projects.map(project => /*#__PURE__*/React.createElement(Tab, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 51\n      }\n    }, project.title))), this.state.projects.map(project => /*#__PURE__*/React.createElement(TabPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Project, Object.assign({\n      refreshState: this.refreshState,\n      employees: this.state.employees,\n      allocationState: this.state.allocations\n    }, project, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(BreakdownChart, Object.assign({\n      chartSettings: [{\n        type: 'string',\n        label: 'Task ID'\n      }, {\n        type: 'string',\n        label: 'Task Name'\n      }, {\n        type: 'string',\n        label: 'Resource'\n      }, {\n        type: 'date',\n        label: 'Start Date'\n      }, {\n        type: 'date',\n        label: 'End Date'\n      }, {\n        type: 'number',\n        label: 'Duration'\n      }, {\n        type: 'number',\n        label: 'Percent Complete'\n      }, {\n        type: 'string',\n        label: 'Dependencies'\n      }]\n    }, project, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }))))), /*#__PURE__*/React.createElement(TabPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, \"Any content 1\")), /*#__PURE__*/React.createElement(TabPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, \"Any content 2\"))), this.state.projects.map(project => /*#__PURE__*/React.createElement(Project, Object.assign({\n      refreshState: this.refreshState,\n      employees: this.state.employees,\n      allocationState: this.state.allocations\n    }, project, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(ProjectForm, {\n      isEditing: false,\n      allocations: this.state.allocations,\n      employees: this.state.employees,\n      projects: this.state.projects,\n      refreshState: this.refreshState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }), this.state.projects.map(project => /*#__PURE__*/React.createElement(BreakdownChart, Object.assign({\n      chartSettings: [{\n        type: 'string',\n        label: 'Task ID'\n      }, {\n        type: 'string',\n        label: 'Task Name'\n      }, {\n        type: 'string',\n        label: 'Resource'\n      }, {\n        type: 'date',\n        label: 'Start Date'\n      }, {\n        type: 'date',\n        label: 'End Date'\n      }, {\n        type: 'number',\n        label: 'Duration'\n      }, {\n        type: 'number',\n        label: 'Percent Complete'\n      }, {\n        type: 'string',\n        label: 'Dependencies'\n      }]\n    }, project, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 45\n      }\n    }))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  title: \"Webteam Capacity Management\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/index.js"],"names":["React","ReactDOM","CapChart","BreakdownChart","ProjectsList","ProjectForm","Project","serviceWorker","Tab","Tabs","TabList","TabPanel","Legend","props","tableStyle","border","backgroundColor","marginLeft","marginRight","App","Component","constructor","refreshState","fetch","then","res","json","projectData","state","chartData","map","project","push","id","title","Date","startDate","calcEndDate","setState","projects","empty","length","employees","allocations","type","label","componentDidMount","render","textAlign","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,IAAsBC,WAAtB,EAAmCC,OAAnC,QAAiD,gBAAjD;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,OAAO,iCAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAMC,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAE,iBADS;AAEjBC,IAAAA,eAAe,EAAE,SAFA;AAGjBC,IAAAA,UAAU,EAAG,MAHI;AAIjBC,IAAAA,WAAW,EAAG;AAJG,GAAnB;AAMA,sBAAO;AAAO,IAAA,MAAM,EAAG,QAAhB;AAAyB,IAAA,KAAK,EAAE,KAAhC;AACP,IAAA,KAAK,EAAIJ,UADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,KAAK,EAAG,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAI,IAAA,KAAK,EAAG,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFH,eAGG;AAAI,IAAA,KAAK,EAAG,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHH,CAFQ,eAOP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CAPO,eAYP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CAZO,eAiBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CAjBO,eAsBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CAtBO,CAAP;AA4BD;;AAED,MAAMK,GAAN,SAAkBnB,KAAK,CAACoB,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBS,YAjBmB,GAiBJ,MAAM;AACjBC,MAAAA,KAAK,CAAC,sCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,cAAMC,WAAW,GAAG,CAAC,KAAKC,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAD,CAApB;AAEAH,QAAAA,IAAI,CAACI,GAAL,CAASC,OAAO,IACZJ,WAAW,CAACK,IAAZ,CAAiB,CACbD,OAAO,CAACE,EADK,EAEbF,OAAO,CAACG,KAFK,EAGb,IAHa,EAIb,IAAIC,IAAJ,CAASJ,OAAO,CAACK,SAAjB,CAJa,EAKb,IAAID,IAAJ,CAASJ,OAAO,CAACM,WAAjB,CALa,EAMb,IANa,EAOb,IAPa,EAQb,IARa,CAAjB,CADJ;AAcA,aAAKC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAEb,IADE;AAEZG,UAAAA,SAAS,EAAEF;AAFC,SAAd;AAID,OAvBH;AA0BA,WAAKW,QAAL,CAAc;AACZE,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWW,QAAX,CAAoBE,MAApB,KAA+B;AAD1B,OAAd;AAGAlB,MAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,aAAKY,QAAL,CAAc;AACVI,UAAAA,SAAS,EAAEhB;AADD,SAAd;AAGD,OANH;AAQAH,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,aAAKY,QAAL,CAAc;AACVK,UAAAA,WAAW,EAAEjB;AADH,SAAd;AAGD,OANH,EAtCiB,CA8CjB;AACA;AACA;AACH,KAlEkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CACT,CACA;AAAEe,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OADA,EAEA;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAFA,EAGA;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAHA,EAIA;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAJA,EAKA;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OALA,EAMA;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OANA,EAOA;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAPA,EAQA;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OARA,CADS,CADA;AAYRN,MAAAA,QAAQ,EAAE,EAZF;AAYMI,MAAAA,WAAW,EAAE,EAZnB;AAYuBD,MAAAA,SAAS,EAAE;AAZlC,KAAb;AAcD;;AAoDDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,YAAL;AACD;;AAEFyB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKnC,KAAL,CAAWqB,KAA9C,CAAL,CADH,EAGI,KAAKN,KAAL,CAAWW,QAAX,CAAoBE,MAApB,KAA+B,CAA/B,gBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC,gBAA4C,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHhD,eAKG,oBAAC,WAAD;AACE,MAAA,SAAS,EAAI,KADf;AAEE,MAAA,WAAW,EAAI,KAAKD,KAAL,CAAWe,WAF5B;AAGE,MAAA,SAAS,EAAI,KAAKf,KAAL,CAAWc,SAH1B;AAIE,MAAA,QAAQ,EAAI,KAAKd,KAAL,CAAWW,QAJzB;AAKE,MAAA,YAAY,EAAE,KAAKjB,YALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,eAaG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbH,eAeG,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKM,KAAL,CAAWW,QAAX,CAAoBT,GAApB,CAAwBC,OAAO,iBAAI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,OAAO,CAACG,KAAd,CAAnC,CADH,CADJ,EAKK,KAAKN,KAAL,CAAWW,QAAX,CAAoBT,GAApB,CAAwBC,OAAO,iBAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AACA,MAAA,YAAY,EAAI,KAAKT,YADrB;AAEA,MAAA,SAAS,EAAI,KAAKM,KAAL,CAAWc,SAFxB;AAGA,MAAA,eAAe,EAAI,KAAKd,KAAL,CAAWe;AAH9B,OAIIZ,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA,eAMA,oBAAC,cAAD;AAAgB,MAAA,aAAa,EAAI,CACjC;AAAEa,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OADiC,EAEjC;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAFiC,EAGjC;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAHiC,EAIjC;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAJiC,EAKjC;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OALiC,EAMjC;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OANiC,EAOjC;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAPiC,EAQjC;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OARiC;AAAjC,OAUId,OAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANA,CADkC,CAAnC,CALL,eAyBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAzBJ,eA4BI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CA5BJ,CAfH,EAgDI,KAAKH,KAAL,CAAWW,QAAX,CAAoBT,GAApB,CAAwBC,OAAO,iBAAI,oBAAC,OAAD;AAClC,MAAA,YAAY,EAAI,KAAKT,YADa;AAElC,MAAA,SAAS,EAAI,KAAKM,KAAL,CAAWc,SAFU;AAGlC,MAAA,eAAe,EAAI,KAAKd,KAAL,CAAWe;AAHI,OAIhCZ,OAJgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnC,CAhDJ,eAsDG,oBAAC,WAAD;AACE,MAAA,SAAS,EAAI,KADf;AAEE,MAAA,WAAW,EAAI,KAAKH,KAAL,CAAWe,WAF5B;AAGE,MAAA,SAAS,EAAI,KAAKf,KAAL,CAAWc,SAH1B;AAIE,MAAA,QAAQ,EAAI,KAAKd,KAAL,CAAWW,QAJzB;AAKE,MAAA,YAAY,EAAE,KAAKjB,YALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDH,eA+DG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/DH,EAiEI,KAAKM,KAAL,CAAWW,QAAX,CAAoBT,GAApB,CAAwBC,OAAO,iBAAI,oBAAC,cAAD;AAAgB,MAAA,aAAa,EAAI,CACrE;AAAEa,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OADqE,EAErE;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAFqE,EAGrE;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAHqE,EAIrE;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAJqE,EAKrE;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OALqE,EAMrE;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OANqE,EAOrE;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAPqE,EAQrE;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OARqE;AAAjC,OAS7Bd,OAT6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnC,CAjEJ,CADF;AAiFA;;AA3J+B;;AA8JlC9B,QAAQ,CAAC8C,MAAT,eACE,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAG,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACA3C,aAAa,CAAC4C,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport CapChart from './CapChart';\nimport BreakdownChart from './BreakdownChart';\nimport ProjectsList, {ProjectForm, Project} from './ProjectsList';\nimport * as serviceWorker from './serviceWorker';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\n\n//chart library format\n// const chartSettings = [\n//     [\n//       { type: 'string', label: 'Task ID' },\n//       { type: 'string', label: 'Task Name' },\n//       { type: 'string', label: 'Resource' },\n//       { type: 'date', label: 'Start Date' },\n//       { type: 'date', label: 'End Date' },\n//       { type: 'number', label: 'Duration' },\n//       { type: 'number', label: 'Percent Complete' },\n//       { type: 'string', label: 'Dependencies' },\n//     ], \n//     [\n//       'EEL',\n//       'EEL',\n//       null,\n//       new Date(2020, 5, 1),\n//       new Date(2020, 7, 14),\n//       null,\n//       100,\n//       null,\n//     ],\n//   ];\n\n// padding: 10px;\n//         border: 2px solid #1c87c9;\n//         border-radius: 5px;\n//         background-color: #e5e5e5;\n//         text-align: center;\n\nfunction Legend(props) {\n  const tableStyle = {\n    border: '2px solid black',\n    backgroundColor: '#d3e4ee',\n    marginLeft : 'auto',\n    marginRight : 'auto'\n  }\n  return <table alight = 'center' rules ='all' \n  style = {tableStyle}>\n <tr>\n    <th width = '20'>Weight</th>\n    <th width = '30'>Description</th>\n    <th width = '50'>Hours per point</th>\n  </tr>\n  <tr>\n    <td>.25</td>\n    <td>Lead, not much direct work</td>\n    <td>65</td>\n  </tr>\n  <tr>\n    <td>.50</td>\n    <td>New Employee</td>\n    <td>30</td>\n  </tr>\n  <tr>\n    <td>.75</td>\n    <td>Progressing towards full capacity or also mentoring junior members</td>\n    <td>16</td>\n  </tr>\n  <tr>\n    <td>1</td>\n    <td>Full capactiy</td>\n    <td>8</td>\n  </tr>\n  </table>;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [\n        [\n        { type: 'string', label: 'Task ID' },\n        { type: 'string', label: 'Task Name' },\n        { type: 'string', label: 'Resource' },\n        { type: 'date', label: 'Start Date' },\n        { type: 'date', label: 'End Date' },\n        { type: 'number', label: 'Duration' },\n        { type: 'number', label: 'Percent Complete' },\n        { type: 'string', label: 'Dependencies' },\n      ],\n      ], projects: [], allocations: [], employees: [],\n    };\n  }\n  refreshState = () => {\n      fetch('https://localhost:44391/api/projects')\n      .then(res => res.json())\n      .then(json => {\n          const projectData = [this.state.chartData[0],];\n\n          json.map(project =>\n              projectData.push([\n                  project.id,\n                  project.title,\n                  null,\n                  new Date(project.startDate),\n                  new Date(project.calcEndDate),\n                  null,\n                  null,\n                  null,\n              ])\n           )\n\n          \n          this.setState({\n            projects: json,\n            chartData: projectData,\n          });\n        }\n        \n      )\n      this.setState({\n        empty: this.state.projects.length === 1\n      });\n      fetch('https://localhost:44391/api/employees')\n      .then(res => res.json())\n      .then(json => {\n          this.setState({\n              employees: json\n          });\n        },\n      )\n      fetch('https://localhost:44391/api/allocations')\n      .then(res => res.json())\n      .then(json => {\n          this.setState({\n              allocations: json,\n              });\n        },\n      )   \n      // this.setState({\n      //   isEmpty: this.state.projects.length === 0\n      // })\n  }\n  \n  componentDidMount() {\n    this.refreshState();\n  };\n\n\trender() {\n  \treturn (\n    \t<div>\n        <div><h1 style={{textAlign: \"center\"}}>{this.props.title}</h1></div>\n\n        {this.state.projects.length === 0 ? <div/> : <CapChart data={this.state.chartData} />}\n\n        <ProjectForm \n          isEditing = {false}\n          allocations = {this.state.allocations} \n          employees = {this.state.employees} \n          projects = {this.state.projects} \n          refreshState={this.refreshState}\n        />\n\n        <Legend />\n        \n        <Tabs defaultIndex={1}>\n            <TabList>\n              {this.state.projects.map(project => <Tab>{project.title}</Tab>)}\n            </TabList>\n\n            {this.state.projects.map(project => <TabPanel>\n              <div>\n              <Project\n              refreshState = {this.refreshState} \n              employees = {this.state.employees} \n              allocationState = {this.state.allocations}  \n              {...project}/>\n              <BreakdownChart chartSettings = {[\n              { type: 'string', label: 'Task ID' },\n              { type: 'string', label: 'Task Name' },\n              { type: 'string', label: 'Resource' },\n              { type: 'date', label: 'Start Date' },\n              { type: 'date', label: 'End Date' },\n              { type: 'number', label: 'Duration' },\n              { type: 'number', label: 'Percent Complete' },\n              { type: 'string', label: 'Dependencies' },\n              ]} \n              {...project}/>\n              </div>\n            </TabPanel>)}\n            <TabPanel>\n              <h2>Any content 1</h2>\n            </TabPanel>\n            <TabPanel>\n              <h2>Any content 2</h2>\n            </TabPanel>\n          </Tabs  >\n\n        {this.state.projects.map(project => <Project\n          refreshState = {this.refreshState} \n          employees = {this.state.employees} \n          allocationState = {this.state.allocations}  \n        {...project}/>)}\n        \n        <ProjectForm \n          isEditing = {false}\n          allocations = {this.state.allocations} \n          employees = {this.state.employees} \n          projects = {this.state.projects} \n          refreshState={this.refreshState}\n        />\n\n\n        <Legend />\n\n        {this.state.projects.map(project => <BreakdownChart chartSettings = {[\n        { type: 'string', label: 'Task ID' },\n        { type: 'string', label: 'Task Name' },\n        { type: 'string', label: 'Resource' },\n        { type: 'date', label: 'Start Date' },\n        { type: 'date', label: 'End Date' },\n        { type: 'number', label: 'Duration' },\n        { type: 'number', label: 'Percent Complete' },\n        { type: 'string', label: 'Dependencies' },\n        ]} {...project}/>)}\n\n      </div>\n\n      \n    );\n  }\t\n}\n\nReactDOM.render(\n  <App title = 'Webteam Capacity Management'/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}