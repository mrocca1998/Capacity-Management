{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CapChart from './CapChart';\nimport BreakdownChart from './BreakdownChart';\nimport ProjectsList, { ProjectForm, Project } from './ProjectsList';\nimport * as serviceWorker from './serviceWorker';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport AllocationForm from './AllocationList'; //chart library format\n// const chartSettings = [\n//     [\n//       { type: 'string', label: 'Task ID' },\n//       { type: 'string', label: 'Task Name' },\n//       { type: 'string', label: 'Resource' },\n//       { type: 'date', label: 'Start Date' },\n//       { type: 'date', label: 'End Date' },\n//       { type: 'number', label: 'Duration' },\n//       { type: 'number', label: 'Percent Complete' },\n//       { type: 'string', label: 'Dependencies' },\n//     ], \n//     [\n//       'EEL',\n//       'EEL',\n//       null,\n//       new Date(2020, 5, 1),\n//       new Date(2020, 7, 14),\n//       null,\n//       100,\n//       null,\n//     ],\n//   ];\n// padding: 10px;\n//         border: 2px solid #1c87c9;\n//         border-radius: 5px;\n//         background-color: #e5e5e5;\n//         text-align: center;\n\nfunction Legend(props) {\n  const tableStyle = {\n    border: '2px solid black',\n    backgroundColor: '#d3e4ee',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff'\n  };\n  return /*#__PURE__*/React.createElement(\"table\", {\n    rules: \"all\",\n    style: tableStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    width: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Weight\"), /*#__PURE__*/React.createElement(\"th\", {\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    width: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \" BA Hours per point\"), /*#__PURE__*/React.createElement(\"th\", {\n    width: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \" QA Hours per point\"), /*#__PURE__*/React.createElement(\"th\", {\n    width: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, \" Dev Hours per point\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \".25\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, \"Lead, not much direct work\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, \"63\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"63\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, \"63\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, \".50\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"New Employee\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"28\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \"38\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, \"33\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \".75\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, \"Progressing towards full capacity or also mentoring junior members\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, \"13\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, \"19\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, \"17\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"Full capactiy\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"6\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, \"11\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, \"9\")));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshState = () => {\n      fetch('https://localhost:44391/api/projects').then(res => res.json()).then(json => {\n        const projectData = [this.state.chartData[0]];\n        json.map(project => projectData.push([project.id, project.title, project.endDate && new Date(project.calcEndDate) > new Date(project.endDate) ? 'Insufficient Resources' : null, new Date(project.startDate), new Date(project.calcEndDate), null, 100 * ((project.totalPoints - project.baPoints + (project.totalPoints - project.qaPoints) + (project.totalPoints - project.devPoints)) / 3) / project.totalPoints, null]));\n        this.setState({\n          projects: json,\n          chartData: projectData,\n          height: 120 + json.length * 30\n        });\n      });\n      this.setState({\n        empty: this.state.projects.length === 1\n      });\n      fetch('https://localhost:44391/api/employees').then(res => res.json()).then(json => {\n        this.setState({\n          employees: json\n        });\n      });\n      fetch('https://localhost:44391/api/allocations').then(res => res.json()).then(json => {\n        this.setState({\n          allocations: json\n        });\n      }); // this.setState({\n      //   isEmpty: this.state.projects.length === 0\n      // })\n    };\n\n    this.state = {\n      chartData: [[{\n        type: 'string',\n        label: 'Task ID'\n      }, {\n        type: 'string',\n        label: 'Task Name'\n      }, {\n        type: 'string',\n        label: 'Resource'\n      }, {\n        type: 'date',\n        label: 'Start Date'\n      }, {\n        type: 'date',\n        label: 'End Date'\n      }, {\n        type: 'number',\n        label: 'Duration'\n      }, {\n        type: 'number',\n        label: 'Percent Complete'\n      }, {\n        type: 'string',\n        label: 'Dependencies'\n      }]],\n      projects: [],\n      allocations: [],\n      employees: [],\n      height: 0,\n      monthNames: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    };\n  }\n\n  componentDidMount() {\n    this.refreshState();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 14\n      }\n    }, this.props.title)), this.state.projects.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(CapChart, {\n      height: this.state.height,\n      data: this.state.chartData,\n      refreshState: this.refreshState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 54\n      }\n    }), /*#__PURE__*/React.createElement(ProjectForm, {\n      height: this.state.height,\n      isEditing: false,\n      allocations: this.state.allocations,\n      employees: this.state.employees,\n      projects: this.state.projects,\n      refreshState: this.refreshState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tabs, {\n      deafultIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TabList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, \"Employees\"), this.state.projects.map(project => /*#__PURE__*/React.createElement(Tab, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 51\n      }\n    }, project.title))), /*#__PURE__*/React.createElement(TabPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, this.state.employees.map(employee => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#eeddd3'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 16\n      }\n    }, employee.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 76\n      }\n    }), this.state.allocations.filter(allocation => allocation.employeeId === employee.id).map(allocation => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#d3e4ee'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, this.state.monthNames[new Date(allocation.startDate).getMonth()], \" \", allocation.startDate.substring(0, 4), \" - \", this.state.monthNames[new Date(allocation.endDate).getMonth()], \" \", allocation.endDate.substring(0, 4), \" Project : \", this.state.projects.filter(project => project.id === allocation.projectId)[0].title, \" Role : \", allocation.role)))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 20\n      }\n    }, \"Employee: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 49\n      }\n    })))), this.state.projects.map(project => /*#__PURE__*/React.createElement(TabPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Project, Object.assign({\n      refreshState: this.refreshState,\n      employees: this.state.employees,\n      allocationState: this.state.allocations\n    }, project, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(BreakdownChart, Object.assign({\n      height: 150,\n      chartSettings: [{\n        type: 'string',\n        label: 'Task ID'\n      }, {\n        type: 'string',\n        label: 'Task Name'\n      }, {\n        type: 'string',\n        label: 'Resource'\n      }, {\n        type: 'date',\n        label: 'Start Date'\n      }, {\n        type: 'date',\n        label: 'End Date'\n      }, {\n        type: 'number',\n        label: 'Duration'\n      }, {\n        type: 'number',\n        label: 'Percent Complete'\n      }, {\n        type: 'string',\n        label: 'Dependencies'\n      }]\n    }, project, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    })))))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  title: \"Webteam Capacity Management\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/index.js"],"names":["React","ReactDOM","CapChart","BreakdownChart","ProjectsList","ProjectForm","Project","serviceWorker","Tab","Tabs","TabList","TabPanel","AllocationForm","Legend","props","tableStyle","border","backgroundColor","marginLeft","marginRight","borderRadius","borderWidth","borderColor","App","Component","constructor","refreshState","fetch","then","res","json","projectData","state","chartData","map","project","push","id","title","endDate","Date","calcEndDate","startDate","totalPoints","baPoints","qaPoints","devPoints","setState","projects","height","length","empty","employees","allocations","type","label","monthNames","componentDidMount","render","textAlign","employee","name","filter","allocation","employeeId","getMonth","substring","projectId","role","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport CapChart from './CapChart';\r\nimport BreakdownChart from './BreakdownChart';\r\nimport ProjectsList, {ProjectForm, Project} from './ProjectsList';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport AllocationForm from './AllocationList';\r\n\r\n\r\n//chart library format\r\n// const chartSettings = [\r\n//     [\r\n//       { type: 'string', label: 'Task ID' },\r\n//       { type: 'string', label: 'Task Name' },\r\n//       { type: 'string', label: 'Resource' },\r\n//       { type: 'date', label: 'Start Date' },\r\n//       { type: 'date', label: 'End Date' },\r\n//       { type: 'number', label: 'Duration' },\r\n//       { type: 'number', label: 'Percent Complete' },\r\n//       { type: 'string', label: 'Dependencies' },\r\n//     ], \r\n//     [\r\n//       'EEL',\r\n//       'EEL',\r\n//       null,\r\n//       new Date(2020, 5, 1),\r\n//       new Date(2020, 7, 14),\r\n//       null,\r\n//       100,\r\n//       null,\r\n//     ],\r\n//   ];\r\n\r\n// padding: 10px;\r\n//         border: 2px solid #1c87c9;\r\n//         border-radius: 5px;\r\n//         background-color: #e5e5e5;\r\n//         text-align: center;\r\n\r\nfunction Legend(props) {\r\n  const tableStyle = {\r\n    border: '2px solid black',\r\n    backgroundColor: '#d3e4ee',\r\n    marginLeft : 'auto',\r\n    marginRight : 'auto',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#fff'\r\n  }\r\n  return <table rules ='all' \r\n  style = {tableStyle}>\r\n <tr>\r\n    <th width = '20'>Weight</th>\r\n    <th width = '30'>Description</th>\r\n    <th width = '50'> BA Hours per point</th>\r\n    <th width = '50'> QA Hours per point</th>\r\n    <th width = '50'> Dev Hours per point</th>\r\n  </tr>\r\n  <tr>\r\n    <td>.25</td>\r\n    <td>Lead, not much direct work</td>\r\n    <td>63</td>\r\n    <td>63</td>\r\n    <td>63</td>\r\n  </tr>\r\n  <tr>\r\n    <td>.50</td>\r\n    <td>New Employee</td>\r\n    <td>28</td>\r\n    <td>38</td>\r\n    <td>33</td>\r\n  </tr>\r\n  <tr>\r\n    <td>.75</td>\r\n    <td>Progressing towards full capacity or also mentoring junior members</td>\r\n    <td>13</td>\r\n    <td>19</td>\r\n    <td>17</td>\r\n  </tr>\r\n  <tr>\r\n    <td>1</td>\r\n    <td>Full capactiy</td>\r\n    <td>6</td>\r\n    <td>11</td>\r\n    <td>9</td>\r\n  </tr>\r\n  </table>;\r\n}\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chartData: [\r\n        [\r\n        { type: 'string', label: 'Task ID' },\r\n        { type: 'string', label: 'Task Name' },\r\n        { type: 'string', label: 'Resource' },\r\n        { type: 'date', label: 'Start Date' },\r\n        { type: 'date', label: 'End Date' },\r\n        { type: 'number', label: 'Duration' },\r\n        { type: 'number', label: 'Percent Complete' },\r\n        { type: 'string', label: 'Dependencies' },\r\n      ],\r\n      ], projects: [], allocations: [], employees: [], height: 0, \r\n      monthNames : [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ]\r\n    };\r\n  }\r\n  refreshState = () => {\r\n      fetch('https://localhost:44391/api/projects')\r\n      .then(res => res.json())\r\n      .then(json => {\r\n          const projectData = [this.state.chartData[0],];\r\n\r\n          json.map(project =>\r\n              projectData.push([\r\n                  project.id,\r\n                  project.title,\r\n                  project.endDate && new Date(project.calcEndDate) > new Date(project.endDate) ? 'Insufficient Resources' : null,\r\n                  new Date(project.startDate),\r\n                  new Date(project.calcEndDate),\r\n                  null,\r\n                  100 * (((project.totalPoints-project.baPoints)+(project.totalPoints-project.qaPoints)+(project.totalPoints-project.devPoints))/3)/project.totalPoints,\r\n                  null,\r\n              ])\r\n           )\r\n\r\n          \r\n          this.setState({\r\n            projects: json,\r\n            chartData: projectData,\r\n            height: (120 + (json.length * 30)),\r\n          });\r\n        }\r\n        \r\n      )\r\n      this.setState({\r\n        empty: this.state.projects.length === 1\r\n      });\r\n      fetch('https://localhost:44391/api/employees')\r\n      .then(res => res.json())\r\n      .then(json => {\r\n          this.setState({\r\n              employees: json\r\n          });\r\n        },\r\n      )\r\n      fetch('https://localhost:44391/api/allocations')\r\n      .then(res => res.json())\r\n      .then(json => {\r\n          this.setState({\r\n              allocations: json,\r\n              });\r\n        },\r\n      )   \r\n      // this.setState({\r\n      //   isEmpty: this.state.projects.length === 0\r\n      // })\r\n  }\r\n\r\n\r\n  \r\n  componentDidMount() {\r\n    this.refreshState();\r\n  };\r\n\r\n  \r\n\r\n\trender() {\r\n  \treturn (\r\n    \t<div>\r\n        <div><h1 style={{textAlign: \"center\"}}>{this.props.title}</h1></div>\r\n\r\n        {this.state.projects.length === 0 ? <div/> : <CapChart height = {this.state.height} data={this.state.chartData} refreshState = {this.refreshState}/>}\r\n\r\n        <ProjectForm \r\n          height = {this.state.height}\r\n          isEditing = {false}\r\n          allocations = {this.state.allocations} \r\n          employees = {this.state.employees} \r\n          projects = {this.state.projects} \r\n          refreshState={this.refreshState}\r\n        />\r\n\r\n        <Legend />\r\n        \r\n        <Tabs deafultIndex={0}>\r\n            <TabList>\r\n              <Tab>Employees</Tab>\r\n              {this.state.projects.map(project => <Tab>{project.title}</Tab>)}\r\n            </TabList>\r\n            <TabPanel>\r\n              {this.state.employees.map(employee =>\r\n               <div style = {{backgroundColor : '#eeddd3'}}>{employee.name}<br/>\r\n                {this.state.allocations.filter(allocation =>\r\n                  allocation.employeeId === employee.id)\r\n                  .map(allocation => \r\n                    <div style = {{backgroundColor : '#d3e4ee'}}>{this.state.monthNames[new Date(allocation.startDate).getMonth()]} {allocation.startDate.substring(0, 4)} - {this.state.monthNames[new Date(allocation.endDate).getMonth()]} {allocation.endDate.substring(0, 4)} Project : {this.state.projects.filter(project => project.id === allocation.projectId)[0].title} Role : {allocation.role}\r\n                      </div>               \r\n                  )}\r\n              </div>)}\r\n              <div><span>Employee: </span><span><input></input></span></div>\r\n            </TabPanel>\r\n            {this.state.projects.map(project => <TabPanel>\r\n              <div>\r\n              <Project\r\n              refreshState = {this.refreshState} \r\n              employees = {this.state.employees} \r\n              allocationState = {this.state.allocations}  \r\n              {...project}/>\r\n              <BreakdownChart height = {150} chartSettings = {[\r\n              { type: 'string', label: 'Task ID' },\r\n              { type: 'string', label: 'Task Name' },\r\n              { type: 'string', label: 'Resource' },\r\n              { type: 'date', label: 'Start Date' },\r\n              { type: 'date', label: 'End Date' },\r\n              { type: 'number', label: 'Duration' },\r\n              { type: 'number', label: 'Percent Complete' },\r\n              { type: 'string', label: 'Dependencies' },\r\n              ]} \r\n              {...project}/>\r\n              </div>\r\n            </TabPanel>)}\r\n          </Tabs  >\r\n\r\n    \r\n\r\n      </div>\r\n\r\n      \r\n    );\r\n  }\t\r\n}\r\n\r\nReactDOM.render(\r\n  <App title = 'Webteam Capacity Management'\r\n  />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}