{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\AllocationList.js\";\nimport * as React from \"react\";\nimport EmployeeList from './EmployeeList';\n\nclass AllocationList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addNewAllocation = event => {\n      event.preventDefault();\n      const allocationData = {\n        'name': this.employee.current.value,\n        'role': this.role.current.value,\n        'project': this.props.projectTitle,\n        'startMonth': this.startMonth.current.value,\n        'endMonth': this.endMonth.current.value,\n        'allocation': this.allocation.current.value,\n        'weight': this.weight.current.value\n      };\n      this.props.addAllocation(allocationData);\n    };\n\n    this.state = {\n      name: '',\n      startDate: '',\n      endDate: '',\n      totalPoints: '',\n      baPoints: '',\n      qaPoints: '',\n      devPoints: ''\n    };\n    this.postProject = this.postProject.bind(this);\n  }\n\n  async postProject(event) {\n    event.preventDefault();\n\n    try {\n      const result = await fetch('https://localhost:44391/api/projects', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      });\n      console.log('Result ' + result);\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.props.refreshState();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(EmployeeList, {\n      projectId: this.props.projectId,\n      employees: this.props.employees,\n      allocations: this.props.allocations,\n      addAllocation: this.props.addAllocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, \"Employee: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      list: \"employees\",\n      ref: this.employee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, this.props.employees.map(employee => /*#__PURE__*/React.createElement(EmployeeDropdown, Object.assign({}, employee, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 55\n      }\n    })))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \" Role: \"), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      ref: this.role,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"BA\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"QA\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Dev\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \" Start Month: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"month\",\n      min: \"2020-07\",\n      defaultValue: \"2020-07\",\n      ref: this.startMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \" Allocation: \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \" End Month: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"month\",\n      min: \"2020-07\",\n      defaultValue: \"2020-07\",\n      ref: this.endMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \" Allocation: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      max: \"1\",\n      step: \"0.01\",\n      ref: this.allocation,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \" Weight: \"), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      ref: this.weight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \".25\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \".5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \".75\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"1\"))));\n  }\n\n}\n\nclass EmployeeDropdown extends React.Component {\n  render() {\n    const employee = this.props;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, employee.name);\n  }\n\n}\n\nexport default AllocationList;","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/AllocationList.js"],"names":["React","EmployeeList","AllocationList","Component","constructor","props","changeHandler","event","setState","target","name","value","addNewAllocation","preventDefault","allocationData","employee","current","role","projectTitle","startMonth","endMonth","allocation","weight","addAllocation","state","startDate","endDate","totalPoints","baPoints","qaPoints","devPoints","postProject","bind","result","fetch","method","headers","body","JSON","stringify","console","log","e","refreshState","render","projectId","employees","allocations","map","EmployeeDropdown"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport EmployeeList from './EmployeeList'\r\n\r\nclass AllocationList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name : '',\r\n            startDate : '',\r\n            endDate : '',\r\n            totalPoints: '',\r\n            baPoints : '',\r\n            qaPoints : '',\r\n            devPoints : ''\r\n        }\r\n        this.postProject = this.postProject.bind(this);\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n    \r\n    async postProject(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const result = await fetch('https://localhost:44391/api/projects', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify(this.state)\r\n            });\r\n\r\n            console.log('Result ' + result)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.props.refreshState();\r\n    }\r\n    addNewAllocation = (event) => {\r\n        event.preventDefault();\r\n        const allocationData = {'name': this.employee.current.value, 'role': this.role.current.value, 'project': this.props.projectTitle, 'startMonth': this.startMonth.current.value, 'endMonth': this.endMonth.current.value,'allocation': this.allocation.current.value, 'weight': this.weight.current.value,}; \r\n        this.props.addAllocation(allocationData);\r\n    }\r\n    render() {\r\n        return (\r\n\t\t\t<div>\r\n            <EmployeeList projectId = {this.props.projectId} employees = {this.props.employees} allocations = {this.props.allocations} addAllocation = {this.props.addAllocation}/>\r\n\t\t\t<form>\r\n\t\t\t<label>Employee: </label>\r\n            <input type=\"text\" list=\"employees\" ref={this.employee}/>\r\n            <datalist id=\"employees\">\r\n                {this.props.employees.map(employee => <EmployeeDropdown {...employee}/>)}\r\n            </datalist>\r\n            <label > Role: </label>\r\n            <select type = \"text\" ref={this.role}>\r\n                <option>BA</option>\r\n                <option>QA</option>\r\n                <option>Dev</option>\r\n            </select>\r\n            <label > Start Month: </label>\r\n            <input type=\"month\" min=\"2020-07\" defaultValue=\"2020-07\" ref={this.startMonth}/>\r\n            <label> Allocation: </label>\r\n            <label > End Month: </label>\r\n            <input type=\"month\" min=\"2020-07\" defaultValue=\"2020-07\" ref={this.endMonth}/>\r\n            <label> Allocation: </label>\r\n            <input \r\n            type=\"number\" min=\"0\" max=\"1\" step=\"0.01\" \r\n            ref = {this.allocation}\r\n            required \r\n            />\r\n            <label> Weight: </label>\r\n            <select type = \"text\" ref={this.weight}>\r\n                <option>.25</option>\r\n                <option>.5</option>\r\n                <option>.75</option>\r\n                <option>1</option>\r\n            </select>        \r\n            {/* <button onClick={this.addNewAllocation}> Add Allocation</button> */}\r\n\r\n\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nclass EmployeeDropdown extends React.Component {\r\n\trender() {\r\n  \tconst employee = this.props;\r\n  \treturn (\r\n        <option>{employee.name}</option>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllocationList;"]},"metadata":{},"sourceType":"module"}