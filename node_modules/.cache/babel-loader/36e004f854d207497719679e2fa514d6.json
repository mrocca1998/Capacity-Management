{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import ReactDOM from'react-dom';import'./index.css';import CapChart from'./CapChart';import BreakdownChart from'./BreakdownChart';import ProjectsList,{ProjectForm,Project}from'./ProjectsList';import*as serviceWorker from'./serviceWorker';import{Tab,Tabs,TabList,TabPanel}from'react-tabs';import'react-tabs/style/react-tabs.css';//chart library format\n// const chartSettings = [\n//     [\n//       { type: 'string', label: 'Task ID' },\n//       { type: 'string', label: 'Task Name' },\n//       { type: 'string', label: 'Resource' },\n//       { type: 'date', label: 'Start Date' },\n//       { type: 'date', label: 'End Date' },\n//       { type: 'number', label: 'Duration' },\n//       { type: 'number', label: 'Percent Complete' },\n//       { type: 'string', label: 'Dependencies' },\n//     ], \n//     [\n//       'EEL',\n//       'EEL',\n//       null,\n//       new Date(2020, 5, 1),\n//       new Date(2020, 7, 14),\n//       null,\n//       100,\n//       null,\n//     ],\n//   ];\n// padding: 10px;\n//         border: 2px solid #1c87c9;\n//         border-radius: 5px;\n//         background-color: #e5e5e5;\n//         text-align: center;\nfunction Legend(props){var tableStyle={border:'2px solid black',backgroundColor:'#d3e4ee',marginLeft:'auto',marginRight:'auto',borderRadius:10,borderWidth:1,borderColor:'#fff'};return/*#__PURE__*/React.createElement(\"table\",{rules:\"all\",style:tableStyle},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{width:\"20\"},\"Weight\"),/*#__PURE__*/React.createElement(\"th\",{width:\"30\"},\"Description\"),/*#__PURE__*/React.createElement(\"th\",{width:\"50\"},\" BA Hours per point\"),/*#__PURE__*/React.createElement(\"th\",{width:\"50\"},\" QA Hours per point\"),/*#__PURE__*/React.createElement(\"th\",{width:\"50\"},\" Dev Hours per point\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\".25\"),/*#__PURE__*/React.createElement(\"td\",null,\"Lead, not much direct work\"),/*#__PURE__*/React.createElement(\"td\",null,\"63\"),/*#__PURE__*/React.createElement(\"td\",null,\"63\"),/*#__PURE__*/React.createElement(\"td\",null,\"63\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\".50\"),/*#__PURE__*/React.createElement(\"td\",null,\"New Employee\"),/*#__PURE__*/React.createElement(\"td\",null,\"28\"),/*#__PURE__*/React.createElement(\"td\",null,\"38\"),/*#__PURE__*/React.createElement(\"td\",null,\"33\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\".75\"),/*#__PURE__*/React.createElement(\"td\",null,\"Progressing towards full capacity or also mentoring junior members\"),/*#__PURE__*/React.createElement(\"td\",null,\"13\"),/*#__PURE__*/React.createElement(\"td\",null,\"19\"),/*#__PURE__*/React.createElement(\"td\",null,\"17\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"1\"),/*#__PURE__*/React.createElement(\"td\",null,\"Full capactiy\"),/*#__PURE__*/React.createElement(\"td\",null,\"6\"),/*#__PURE__*/React.createElement(\"td\",null,\"11\"),/*#__PURE__*/React.createElement(\"td\",null,\"9\")));}var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.refreshState=function(){fetch('https://localhost:44391/api/projects').then(function(res){return res.json();}).then(function(json){var projectData=[_this.state.chartData[0]];json.map(function(project){return projectData.push([project.id,project.title,project.endDate&&new Date(project.calcEndDate)>new Date(project.endDate)?'Insufficient Resources':null,new Date(project.startDate),new Date(project.calcEndDate),null,100*((project.totalPoints-project.baPoints+(project.totalPoints-project.qaPoints)+(project.totalPoints-project.devPoints))/3)/project.totalPoints,null]);});_this.setState({projects:json,chartData:projectData,height:120+json.length*30});});_this.setState({empty:_this.state.projects.length===1});fetch('https://localhost:44391/api/employees').then(function(res){return res.json();}).then(function(json){_this.setState({employees:json});});fetch('https://localhost:44391/api/allocations').then(function(res){return res.json();}).then(function(json){_this.setState({allocations:json});});// this.setState({\n//   isEmpty: this.state.projects.length === 0\n// })\n};_this.state={chartData:[[{type:'string',label:'Task ID'},{type:'string',label:'Task Name'},{type:'string',label:'Resource'},{type:'date',label:'Start Date'},{type:'date',label:'End Date'},{type:'number',label:'Duration'},{type:'number',label:'Percent Complete'},{type:'string',label:'Dependencies'}]],projects:[],allocations:[],employees:[],height:0};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.refreshState();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{style:{textAlign:\"center\"}},this.props.title)),this.state.projects.length===0?/*#__PURE__*/React.createElement(\"div\",null):/*#__PURE__*/React.createElement(CapChart,{height:this.state.height,data:this.state.chartData,refreshState:this.refreshState}),/*#__PURE__*/React.createElement(ProjectForm,{height:this.state.height,isEditing:false,allocations:this.state.allocations,employees:this.state.employees,projects:this.state.projects,refreshState:this.refreshState}),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(Tabs,{deafultIndex:0},/*#__PURE__*/React.createElement(TabList,null,/*#__PURE__*/React.createElement(Tab,null,\"Employees\"),this.state.projects.map(function(project){return/*#__PURE__*/React.createElement(Tab,null,project.title);})),/*#__PURE__*/React.createElement(TabPanel,null,this.state.employees.map(function(employees){return/*#__PURE__*/React.createElement(\"div\",null,employees.name,/*#__PURE__*/React.createElement(\"br\",null));})),this.state.projects.map(function(project){return/*#__PURE__*/React.createElement(TabPanel,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Project,Object.assign({refreshState:_this2.refreshState,employees:_this2.state.employees,allocationState:_this2.state.allocations},project)),/*#__PURE__*/React.createElement(BreakdownChart,Object.assign({height:150,chartSettings:[{type:'string',label:'Task ID'},{type:'string',label:'Task Name'},{type:'string',label:'Resource'},{type:'date',label:'Start Date'},{type:'date',label:'End Date'},{type:'number',label:'Duration'},{type:'number',label:'Percent Complete'},{type:'string',label:'Dependencies'}]},project))));})));}}]);return App;}(React.Component);ReactDOM.render(/*#__PURE__*/React.createElement(App,{title:\"Webteam Capacity Management\"}),document.getElementById('root'));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/index.js"],"names":["React","ReactDOM","CapChart","BreakdownChart","ProjectsList","ProjectForm","Project","serviceWorker","Tab","Tabs","TabList","TabPanel","Legend","props","tableStyle","border","backgroundColor","marginLeft","marginRight","borderRadius","borderWidth","borderColor","App","refreshState","fetch","then","res","json","projectData","state","chartData","map","project","push","id","title","endDate","Date","calcEndDate","startDate","totalPoints","baPoints","qaPoints","devPoints","setState","projects","height","length","empty","employees","allocations","type","label","textAlign","name","Component","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport CapChart from './CapChart';\nimport BreakdownChart from './BreakdownChart';\nimport ProjectsList, {ProjectForm, Project} from './ProjectsList';\nimport * as serviceWorker from './serviceWorker';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\n\n//chart library format\n// const chartSettings = [\n//     [\n//       { type: 'string', label: 'Task ID' },\n//       { type: 'string', label: 'Task Name' },\n//       { type: 'string', label: 'Resource' },\n//       { type: 'date', label: 'Start Date' },\n//       { type: 'date', label: 'End Date' },\n//       { type: 'number', label: 'Duration' },\n//       { type: 'number', label: 'Percent Complete' },\n//       { type: 'string', label: 'Dependencies' },\n//     ], \n//     [\n//       'EEL',\n//       'EEL',\n//       null,\n//       new Date(2020, 5, 1),\n//       new Date(2020, 7, 14),\n//       null,\n//       100,\n//       null,\n//     ],\n//   ];\n\n// padding: 10px;\n//         border: 2px solid #1c87c9;\n//         border-radius: 5px;\n//         background-color: #e5e5e5;\n//         text-align: center;\n\nfunction Legend(props) {\n  const tableStyle = {\n    border: '2px solid black',\n    backgroundColor: '#d3e4ee',\n    marginLeft : 'auto',\n    marginRight : 'auto',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff'\n  }\n  return <table rules ='all' \n  style = {tableStyle}>\n <tr>\n    <th width = '20'>Weight</th>\n    <th width = '30'>Description</th>\n    <th width = '50'> BA Hours per point</th>\n    <th width = '50'> QA Hours per point</th>\n    <th width = '50'> Dev Hours per point</th>\n  </tr>\n  <tr>\n    <td>.25</td>\n    <td>Lead, not much direct work</td>\n    <td>63</td>\n    <td>63</td>\n    <td>63</td>\n  </tr>\n  <tr>\n    <td>.50</td>\n    <td>New Employee</td>\n    <td>28</td>\n    <td>38</td>\n    <td>33</td>\n  </tr>\n  <tr>\n    <td>.75</td>\n    <td>Progressing towards full capacity or also mentoring junior members</td>\n    <td>13</td>\n    <td>19</td>\n    <td>17</td>\n  </tr>\n  <tr>\n    <td>1</td>\n    <td>Full capactiy</td>\n    <td>6</td>\n    <td>11</td>\n    <td>9</td>\n  </tr>\n  </table>;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [\n        [\n        { type: 'string', label: 'Task ID' },\n        { type: 'string', label: 'Task Name' },\n        { type: 'string', label: 'Resource' },\n        { type: 'date', label: 'Start Date' },\n        { type: 'date', label: 'End Date' },\n        { type: 'number', label: 'Duration' },\n        { type: 'number', label: 'Percent Complete' },\n        { type: 'string', label: 'Dependencies' },\n      ],\n      ], projects: [], allocations: [], employees: [], height: 0,\n    };\n  }\n  refreshState = () => {\n      fetch('https://localhost:44391/api/projects')\n      .then(res => res.json())\n      .then(json => {\n          const projectData = [this.state.chartData[0],];\n\n          json.map(project =>\n              projectData.push([\n                  project.id,\n                  project.title,\n                  (project.endDate && new Date(project.calcEndDate) > new Date(project.endDate)) ? 'Insufficient Resources' : null,\n                  new Date(project.startDate),\n                  new Date(project.calcEndDate),\n                  null,\n                  100 * (((project.totalPoints-project.baPoints)+(project.totalPoints-project.qaPoints)+(project.totalPoints-project.devPoints))/3)/project.totalPoints,\n                  null,\n              ])\n           )\n\n          \n          this.setState({\n            projects: json,\n            chartData: projectData,\n            height: (120 + (json.length * 30)),\n          });\n        }\n        \n      )\n      this.setState({\n        empty: this.state.projects.length === 1\n      });\n      fetch('https://localhost:44391/api/employees')\n      .then(res => res.json())\n      .then(json => {\n          this.setState({\n              employees: json\n          });\n        },\n      )\n      fetch('https://localhost:44391/api/allocations')\n      .then(res => res.json())\n      .then(json => {\n          this.setState({\n              allocations: json,\n              });\n        },\n      )   \n      // this.setState({\n      //   isEmpty: this.state.projects.length === 0\n      // })\n  }\n\n\n  \n  componentDidMount() {\n    this.refreshState();\n  };\n\n\trender() {\n  \treturn (\n    \t<div>\n        <div><h1 style={{textAlign: \"center\"}}>{this.props.title}</h1></div>\n\n        {this.state.projects.length === 0 ? <div/> : <CapChart height = {this.state.height} data={this.state.chartData} refreshState = {this.refreshState}/>}\n\n        <ProjectForm \n          height = {this.state.height}\n          isEditing = {false}\n          allocations = {this.state.allocations} \n          employees = {this.state.employees} \n          projects = {this.state.projects} \n          refreshState={this.refreshState}\n        />\n\n        <Legend />\n        \n        <Tabs deafultIndex={0}>\n            <TabList>\n              <Tab>Employees</Tab>\n              {this.state.projects.map(project => <Tab>{project.title}</Tab>)}\n            </TabList>\n            <TabPanel>\n              {this.state.employees.map(employees => <div>{employees.name}<br/></div>)}\n            </TabPanel>\n            {this.state.projects.map(project => <TabPanel>\n              <div>\n              <Project\n              refreshState = {this.refreshState} \n              employees = {this.state.employees} \n              allocationState = {this.state.allocations}  \n              {...project}/>\n              <BreakdownChart height = {150} chartSettings = {[\n              { type: 'string', label: 'Task ID' },\n              { type: 'string', label: 'Task Name' },\n              { type: 'string', label: 'Resource' },\n              { type: 'date', label: 'Start Date' },\n              { type: 'date', label: 'End Date' },\n              { type: 'number', label: 'Duration' },\n              { type: 'number', label: 'Percent Complete' },\n              { type: 'string', label: 'Dependencies' },\n              ]} \n              {...project}/>\n              </div>\n            </TabPanel>)}\n          </Tabs  >\n\n        {/* {this.state.projects.map(project => <Project\n          refreshState = {this.refreshState} \n          employees = {this.state.employees} \n          allocationState = {this.state.allocations}  \n        {...project}/>)}\n        \n        <ProjectForm \n          isEditing = {false}\n          allocations = {this.state.allocations} \n          employees = {this.state.employees} \n          projects = {this.state.projects} \n          refreshState={this.refreshState}\n        />\n\n\n        <Legend />\n\n        {this.state.projects.map(project => <BreakdownChart chartSettings = {[\n        { type: 'string', label: 'Task ID' },\n        { type: 'string', label: 'Task Name' },\n        { type: 'string', label: 'Resource' },\n        { type: 'date', label: 'Start Date' },\n        { type: 'date', label: 'End Date' },\n        { type: 'number', label: 'Duration' },\n        { type: 'number', label: 'Percent Complete' },\n        { type: 'string', label: 'Dependencies' },\n        ]} {...project}/>)} */}\n\n      </div>\n\n      \n    );\n  }\t\n}\n\nReactDOM.render(\n  <App title = 'Webteam Capacity Management'\n  />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}