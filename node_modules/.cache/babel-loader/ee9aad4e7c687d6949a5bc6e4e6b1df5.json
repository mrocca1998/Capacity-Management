{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CapChart from './CapChart';\nimport ProjectsList from './ProjectsList';\nimport * as serviceWorker from './serviceWorker';\nconst projectData = [[{\n  type: 'string',\n  label: 'Task ID'\n}, {\n  type: 'string',\n  label: 'Task Name'\n}, {\n  type: 'string',\n  label: 'Resource'\n}, {\n  type: 'date',\n  label: 'Start Date'\n}, {\n  type: 'date',\n  label: 'End Date'\n}, {\n  type: 'number',\n  label: 'Duration'\n}, {\n  type: 'number',\n  label: 'Percent Complete'\n}, {\n  type: 'string',\n  label: 'Dependencies'\n}], ['EEL', 'EEL', null, new Date(2020, 5, 1), new Date(2020, 7, 14), null, 100, null], ['Umbrella', 'Umbrella', null, new Date(2020, 3, 21), new Date(2020, 9, 20), null, 100, null], ['North Carolina', 'North Carolina', null, new Date(2020, 6, 21), new Date(2020, 10, 20), null, 100, null]];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addProject = projectData => {\n      this.setState(prevState => ({\n        projects: [...prevState.projects, projectData]\n      }));\n    };\n\n    this.addEmployee = employeeData => {\n      this.setState(prevState => ({\n        employees: [...prevState.employees, employeeData]\n      }));\n    };\n\n    this.addAllocation = allocationData => {\n      this.setState(prevState => ({\n        allocations: [...prevState.allocations, allocationData]\n      }));\n    };\n\n    this.state = {\n      projects: [],\n      allocations: [],\n      employees: [{\n        'name': 'Paul McCartney',\n        'role': 'Dev',\n        'projects': ['Abbey Road', 'Hey Jude']\n      }, {\n        'name': 'John Lennon',\n        'role': 'QA',\n        'projects': ['Abbey Road']\n      }, {\n        'name': 'George Harrison',\n        'role': 'Dev',\n        'projects': []\n      }, {\n        'name': 'Ringo Starr',\n        'role': 'BA',\n        'projects': []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://localhost:44391/api/employees').then(res => res.json()).then(json => {\n      this.setState({\n        employees: json\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, this.props.title)), /*#__PURE__*/React.createElement(CapChart, {\n      data: projectData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProjectsList, {\n      allocations: this.state.allocations,\n      employees: this.state.employees,\n      projects: this.state.projects,\n      addProject: this.addProject,\n      addAllocation: this.addAllocation,\n      addEmployee: this.addEmployee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  title: \"Personal Lines Capacity Management\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/index.js"],"names":["React","ReactDOM","CapChart","ProjectsList","serviceWorker","projectData","type","label","Date","App","Component","constructor","props","addProject","setState","prevState","projects","addEmployee","employeeData","employees","addAllocation","allocationData","allocations","state","componentDidMount","fetch","then","res","json","render","textAlign","title","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CapChart from './CapChart';\nimport ProjectsList from './ProjectsList';\nimport * as serviceWorker from './serviceWorker';\n\nconst projectData = [\n    [\n      { type: 'string', label: 'Task ID' },\n      { type: 'string', label: 'Task Name' },\n      { type: 'string', label: 'Resource' },\n      { type: 'date', label: 'Start Date' },\n      { type: 'date', label: 'End Date' },\n      { type: 'number', label: 'Duration' },\n      { type: 'number', label: 'Percent Complete' },\n      { type: 'string', label: 'Dependencies' },\n    ], \n    [\n      'EEL',\n      'EEL',\n      null,\n      new Date(2020, 5, 1),\n      new Date(2020, 7, 14),\n      null,\n      100,\n      null,\n    ],\n    [\n      'Umbrella',\n      'Umbrella',\n      null,\n      new Date(2020, 3, 21),\n      new Date(2020, 9, 20),\n      null,\n      100,\n      null,\n    ],\n    [\n      'North Carolina',\n      'North Carolina',\n      null,\n      new Date(2020, 6, 21),\n      new Date(2020, 10, 20),\n      null,\n      100,\n      null,\n    ],\n  ];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [], allocations: [], employees: [{'name': 'Paul McCartney', 'role': 'Dev', 'projects': ['Abbey Road', 'Hey Jude']}, {'name': 'John Lennon', 'role': 'QA', 'projects': ['Abbey Road']}, {'name': 'George Harrison', 'role': 'Dev', 'projects': []}, {'name': 'Ringo Starr', 'role': 'BA', 'projects': []}],\n    };\n  }\n  componentDidMount() {\n    fetch('https://localhost:44391/api/employees')\n      .then(res => res.json())\n      .then(json => {\n          this.setState({\n              employees: json,\n          });\n        },\n      )\n  };\n\n  addProject = (projectData) => {\n  \tthis.setState(prevState => ({\n    \tprojects: [...prevState.projects, projectData],\n    }));\n  };\n\n  addEmployee = (employeeData) => {\n  \tthis.setState(prevState => ({\n    \temployees: [...prevState.employees, employeeData],\n    }));\n  };\n\n  addAllocation = (allocationData) => {\n  \tthis.setState(prevState => ({\n      allocations: [...prevState.allocations, allocationData],\n    }));\n  };\n\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div><h1 style={{textAlign: \"center\"}}>{this.props.title}</h1></div>\n        <CapChart data={projectData} />\n        <ProjectsList allocations = {this.state.allocations} employees = {this.state.employees} projects = {this.state.projects} addProject={this.addProject} addAllocation={this.addAllocation} addEmployee={this.addEmployee}/>\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n  <App title = 'Personal Lines Capacity Management'/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}