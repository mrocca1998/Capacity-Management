{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\ProjectsList.js\";\nimport * as React from \"react\";\nimport AllocationForm from \"./AllocationList\";\nimport EmployeeList from './EmployeeList';\n\nclass ProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      id: '',\n      title: '',\n      startDate: '',\n      endDate: '',\n      totalPoints: '',\n      baPoints: '',\n      qaPoints: '',\n      devPoints: '',\n      isShowing: ''\n    };\n    this.postProject = this.postProject.bind(this);\n    this.putProject = this.putProject.bind(this);\n    this.fillState = this.fillState.bind(this);\n  }\n\n  async postProject(event) {\n    event.preventDefault();\n\n    try {\n      const result = await fetch('https://localhost:44391/api/projects', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: this.state.title,\n          startDate: this.state.startDate,\n          endDate: this.state.endDate,\n          totalPoints: this.state.totalPoints,\n          baPoints: this.state.baPoints,\n          qaPoints: this.state.qaPoints,\n          devPoints: this.state.devPoints,\n          isShowing: false\n        })\n      });\n      console.log('Result ' + result);\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.props.refreshState();\n  }\n\n  async putProject(event) {\n    event.preventDefault();\n\n    try {\n      const result = await fetch('https://localhost:44391/api/Projects/' + this.props.projectId, {\n        method: 'put',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      });\n      console.log('Result ' + result);\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.props.refreshState();\n    this.props.toggleEdit();\n  }\n\n  fillState() {\n    var event1 = new Date(this.props.startDate);\n    let startDate = JSON.stringify(event1);\n    startDate = startDate.slice(1, 11);\n    var event2 = new Date(this.props.endDate);\n    let endDate = JSON.stringify(event2);\n    endDate = endDate.slice(1, 11);\n    this.setState({\n      id: this.props.projectId,\n      title: this.props.title,\n      startDate: startDate,\n      endDate: endDate,\n      totalPoints: this.props.totalPoints,\n      baPoints: this.props.baPoints,\n      qaPoints: this.props.qaPoints,\n      devPoints: this.props.devPoints,\n      isShowing: this.props.isShowing\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.isEditing) {\n      this.fillState();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.isEditing ? this.putProject : this.postProject,\n      style: {\n        backgroundColor: this.props.isEditing ? '#ddd3ee' : '#d3e4ee'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Project Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.changeHandler,\n      required: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \" Start Date: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"startDate\",\n      value: this.state.startDate,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \" End Date: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"endDate\",\n      value: this.state.endDate,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Total Points: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"totalPoints\",\n      value: this.state.totalPoints,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, \"BA Points: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"baPoints\",\n      value: this.state.baPoints,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \" QA Points: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"qaPoints\",\n      value: this.state.qaPoints,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \" Developer Points: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"devPoints\",\n      value: this.state.devPoints,\n      onChange: this.changeHandler,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }), this.props.isEditing ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.toggleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 43\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 100\n      }\n    }, \"Confirm\")) : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 150\n      }\n    }, \"Add Project\")));\n  }\n\n}\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    };\n    this.deleteProject = this.deleteProject.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.toggleShowing = this.toggleShowing.bind(this);\n  }\n\n  toggleEdit() {\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  }\n\n  async deleteProject(id) {\n    if (window.confirm('Are you sure')) {\n      try {\n        const result = await fetch('https://localhost:44391/api/projects/' + this.props.id, {\n          method: 'delete',\n          headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n          }\n        });\n        console.log('Result ' + result);\n      } catch (e) {\n        console.log(e);\n      }\n\n      this.props.refreshState();\n    }\n  }\n\n  toggleShowing() {\n    try {\n      const result = fetch('https://localhost:44391/api/projects/' + this.props.id, {\n        method: 'put',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.props.id,\n          devPoints: 20\n        })\n      });\n      console.log('Result ' + result);\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.props.refreshState();\n  }\n\n  render() {\n    const project = this.props;\n\n    if (this.state.isEditing) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ProjectForm, {\n        refreshState: this.props.refreshState,\n        isEditing: this.state.isEditing,\n        toggleEdit: this.toggleEdit,\n        projectId: this.props.id,\n        title: this.props.title,\n        startDate: this.props.startDate,\n        endDate: this.props.endDate,\n        totalPoints: this.props.totalPoints,\n        baPoints: this.props.baPoints,\n        qaPoints: this.props.qaPoints,\n        devPoints: this.props.devPoints,\n        isShowing: this.props.isShowing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(EmployeeList, {\n        refreshState: this.props.refreshState,\n        projectId: this.props.id,\n        employees: this.props.employees,\n        allocations: this.props.allocations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(AllocationForm, {\n        refreshState: this.props.refreshState,\n        projectId: project.id,\n        employees: project.employees,\n        allocations: project.allocationState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#ddd3ee'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }\n      }, \"Project: \", project.title, \" Start Date: \", project.startDate.substring(5, 7), \"/\", project.startDate.substring(8, 10), \"/\", project.startDate.substring(0, 4), \" End Date: \", project.endDate.substring(5, 7), \"/\", project.endDate.substring(8, 10), \"/\", project.endDate.substring(0, 4), \" Total Points: \", project.totalPoints, \" BA Points: \", project.baPoints, \" QA Points: \", project.qaPoints, \" Dev Points: \", project.devPoints, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.deleteProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://icon-library.com/images/delete-icon-png-16x16/delete-icon-png-16x16-21.jpg\",\n        alt: \"my image\",\n        width: \"12\",\n        height: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 54\n        }\n      })), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.toggleShowing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, this.props.isShowing ? 'Hide' : 'Show', \" Breakdown\"))), /*#__PURE__*/React.createElement(EmployeeList, {\n        refreshState: this.props.refreshState,\n        projectId: this.props.id,\n        employees: this.props.employees,\n        allocations: this.props.allocations,\n        addAllocation: this.props.addAllocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(AllocationForm, {\n        refreshState: this.props.refreshState,\n        projectId: project.id,\n        employees: project.employees,\n        allocations: project.allocationState,\n        isEditing: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n}\n\nexport { ProjectForm, Project };","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/ProjectsList.js"],"names":["React","AllocationForm","EmployeeList","ProjectForm","Component","constructor","props","changeHandler","event","setState","target","name","value","state","id","title","startDate","endDate","totalPoints","baPoints","qaPoints","devPoints","isShowing","postProject","bind","putProject","fillState","preventDefault","result","fetch","method","headers","body","JSON","stringify","console","log","e","refreshState","projectId","toggleEdit","event1","Date","slice","event2","componentDidMount","isEditing","render","backgroundColor","Project","deleteProject","toggleShowing","window","confirm","project","employees","allocations","allocationState","substring","addAllocation"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport AllocationForm from \"./AllocationList\";\r\nimport EmployeeList from './EmployeeList'\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: '',\r\n            title : '',\r\n            startDate : '',\r\n            endDate : '',\r\n            totalPoints: '',\r\n            baPoints : '',\r\n            qaPoints : '',\r\n            devPoints : '',\r\n            isShowing: ''\r\n        }\r\n        this.postProject = this.postProject.bind(this);\r\n        this.putProject = this.putProject.bind(this);\r\n        this.fillState = this.fillState.bind(this);\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n    \r\n    async postProject(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const result = await fetch('https://localhost:44391/api/projects', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title : this.state.title,\r\n                    startDate : this.state.startDate,\r\n                    endDate : this.state.endDate,\r\n                    totalPoints: this.state.totalPoints,\r\n                    baPoints : this.state.baPoints,\r\n                    qaPoints : this.state.qaPoints,\r\n                    devPoints : this.state.devPoints,\r\n                    isShowing: false\r\n                })\r\n            });\r\n\r\n            console.log('Result ' + result)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.props.refreshState();\r\n    }\r\n\r\n    async putProject(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const result = await fetch('https://localhost:44391/api/Projects/' + this.props.projectId, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify(this.state)\r\n            });\r\n\r\n            console.log('Result ' + result)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.props.refreshState();\r\n        this.props.toggleEdit();\r\n    }\r\n\r\n    fillState() {\r\n        var event1 = new Date(this.props.startDate);\r\n        let startDate = JSON.stringify(event1)\r\n        startDate = startDate.slice(1,11)\r\n        var event2 = new Date(this.props.endDate);\r\n        let endDate = JSON.stringify(event2)\r\n        endDate = endDate.slice(1,11)\r\n        this.setState({\r\n            id: this.props.projectId,\r\n            title : this.props.title,\r\n            startDate : startDate,\r\n            endDate : endDate,\r\n            totalPoints: this.props.totalPoints,\r\n            baPoints : this.props.baPoints,\r\n            qaPoints : this.props.qaPoints,\r\n            devPoints : this.props.devPoints,\r\n            isShowing: this.props.isShowing\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isEditing) {\r\n            this.fillState();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\t        \r\n            {/* Form */}\r\n            <form \r\n                onSubmit={this.props.isEditing ? this.putProject : this.postProject} \r\n                style={{backgroundColor: this.props.isEditing ? '#ddd3ee' :'#d3e4ee'}}\r\n            >\r\n                            \r\n            <label>Project Title: </label>\r\n            <input \r\n            type=\"text\"\r\n            name = 'title'\r\n            value = {this.state.title}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            autoComplete=\"off\"\r\n            />\r\n            \r\n            {/* Dates */}\r\n            <label> Start Date: </label>\r\n            <input \r\n            type=\"date\"\r\n            name = 'startDate'\r\n            value = {this.state.startDate}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <label> End Date: </label>\r\n            <input \r\n            type=\"date\"\r\n            name = 'endDate'\r\n            value = {this.state.endDate}\r\n            onChange = {this.changeHandler}\r\n            />\r\n\r\n            \r\n            {/* Points */}\r\n            <label>Total Points: </label>\r\n            <input \r\n            type=\"number\"\r\n            name = 'totalPoints'\r\n            value = {this.state.totalPoints}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <br /><label>BA Points: </label>\r\n            <input \r\n            type=\"number\"\r\n            name = 'baPoints'\r\n            value = {this.state.baPoints}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <label> QA Points: </label>\r\n            <input \r\n            type=\"number\"\r\n            name = 'qaPoints'\r\n            value = {this.state.qaPoints}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <label > Developer Points: </label>\r\n            <input \r\n            type=\"number\"\r\n            name = 'devPoints'\r\n            value = {this.state.devPoints}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            \r\n            {this.props.isEditing ? <span><button onClick = {this.props.toggleEdit}>Cancel</button><button type = 'submit'>Confirm</button></span> : <button type = 'submit'>Add Project</button>}\r\n            </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Project extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isEditing: false\r\n        }\r\n        this.deleteProject = this.deleteProject.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.toggleShowing = this.toggleShowing.bind(this);\r\n    }\r\n\r\n    toggleEdit() {\r\n        this.setState ({\r\n            isEditing: !this.state.isEditing\r\n        })\r\n    }\r\n\r\n    async deleteProject(id) {\r\n        if(window.confirm('Are you sure')) {\r\n            \r\n            try { \r\n                const result = await fetch('https://localhost:44391/api/projects/' + this.props.id, {\r\n                    method: 'delete',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type':'application/json',\r\n                    }\r\n                })\r\n    \r\n                console.log('Result ' + result)\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n            this.props.refreshState();\r\n        }\r\n    }\r\n\r\n    toggleShowing() {\r\n        try {\r\n            const result = fetch('https://localhost:44391/api/projects/' + this.props.id, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    id: this.props.id,\r\n                    devPoints: 20,\r\n               })\r\n            });\r\n\r\n            console.log('Result ' + result)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.props.refreshState();\r\n    }\r\n\trender() {\r\n    const project = this.props;\r\n\r\n    if (this.state.isEditing) {\r\n        return (\r\n            <div>\r\n                <ProjectForm \r\n                    refreshState = {this.props.refreshState}\r\n                    isEditing = {this.state.isEditing} \r\n                    toggleEdit = {this.toggleEdit}\r\n                    projectId = {this.props.id}\r\n                    title = {this.props.title}\r\n                    startDate = {this.props.startDate}\r\n                    endDate = {this.props.endDate}\r\n                    totalPoints = {this.props.totalPoints}\r\n                    baPoints = {this.props.baPoints}\r\n                    qaPoints = {this.props.qaPoints}\r\n                    devPoints = {this.props.devPoints}\r\n                    isShowing = {this.props.isShowing}\r\n                />\r\n                <EmployeeList refreshState = {this.props.refreshState} projectId = {this.props.id} employees = {this.props.employees} allocations = {this.props.allocations} />               \r\n                <AllocationForm \r\n                    refreshState = {this.props.refreshState}\r\n                    projectId = {project.id} \r\n                    employees = {project.employees} \r\n                    allocations = {project.allocationState}\r\n                />\r\n            </div>\r\n        )\r\n    }  else {\r\n        return (\r\n            <div>\r\n                <div style = {{backgroundColor : '#ddd3ee'}}>Project: {project.title} Start Date: {project.startDate.substring(5,7)}/{project.startDate.substring(8,10)}/{project.startDate.substring(0,4)} End Date: {project.endDate.substring(5,7)}/{project.endDate.substring(8,10)}/{project.endDate.substring(0,4)} Total Points: {project.totalPoints} BA Points: {project.baPoints} QA Points: {project.qaPoints} Dev Points: {project.devPoints}\r\n                <button onClick = {this.toggleEdit}>Update</button>\r\n                <button onClick={this.deleteProject}><img src=\"https://icon-library.com/images/delete-icon-png-16x16/delete-icon-png-16x16-21.jpg\" alt=\"my image\" width=\"12\" height=\"12\"/></button>\r\n                <form onSubmit = {this.toggleShowing}>\r\n                <button type = 'submit'>{this.props.isShowing ? 'Hide' : 'Show'} Breakdown</button>\r\n                </form>\r\n                </div>\r\n                <EmployeeList refreshState = {this.props.refreshState} projectId = {this.props.id} employees = {this.props.employees} allocations = {this.props.allocations} addAllocation = {this.props.addAllocation}/>\r\n                <AllocationForm\r\n                    refreshState = {this.props.refreshState} \r\n                    projectId = {project.id} \r\n                    employees = {project.employees} \r\n                    allocations = {project.allocationState} \r\n                    isEditing = {false}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n  \t\r\n  }\r\n}\r\n\r\nexport { ProjectForm, Project, };"]},"metadata":{},"sourceType":"module"}