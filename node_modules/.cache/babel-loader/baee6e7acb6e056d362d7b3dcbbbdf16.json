{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CapChart from './CapChart';\nimport ProjectsList from './ProjectsList';\nimport EmployeesList from './EmployeeList';\nimport * as serviceWorker from './serviceWorker';\nconst projectData = [[{\n  type: 'string',\n  label: 'Task ID'\n}, {\n  type: 'string',\n  label: 'Task Name'\n}, {\n  type: 'string',\n  label: 'Resource'\n}, {\n  type: 'date',\n  label: 'Start Date'\n}, {\n  type: 'date',\n  label: 'End Date'\n}, {\n  type: 'number',\n  label: 'Duration'\n}, {\n  type: 'number',\n  label: 'Percent Complete'\n}, {\n  type: 'string',\n  label: 'Dependencies'\n}], ['EEL', 'EEL', null, new Date(2020, 5, 1), new Date(2020, 7, 14), null, 100, null], ['Umbrella', 'Umbrella', null, new Date(2020, 3, 21), new Date(2020, 9, 20), null, 100, null], ['North Carolina', 'North Carolina', null, new Date(2020, 6, 21), new Date(2020, 10, 20), null, 100, null]];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      projects: [],\n      allocations: [],\n      employees: []\n    };\n\n    this.addProject = projectData => {\n      this.setState(prevState => ({\n        projects: [...prevState.projects, projectData]\n      }));\n    };\n\n    this.addAllocation = employeeData => {\n      this.setState(prevState => ({\n        employees: [...prevState.employees, employeeData]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://localhost:44391/api/employees\").then(res => res.json()).then(result => {\n      this.setState({\n        employees: result\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, this.props.title)), /*#__PURE__*/React.createElement(CapChart, {\n      data: projectData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProjectsList, {\n      employees: this.state.employees,\n      projects: this.state.projects,\n      addProject: this.addProject,\n      addAllocation: this.addAllocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  title: \"Personal Lines Capacity Management\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/index.js"],"names":["React","ReactDOM","CapChart","ProjectsList","EmployeesList","serviceWorker","projectData","type","label","Date","App","Component","state","projects","allocations","employees","addProject","setState","prevState","addAllocation","employeeData","componentDidMount","fetch","then","res","json","result","render","textAlign","props","title","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CapChart from './CapChart';\nimport ProjectsList from './ProjectsList';\nimport EmployeesList from './EmployeeList';\nimport * as serviceWorker from './serviceWorker';\n\nconst projectData = [\n    [\n      { type: 'string', label: 'Task ID' },\n      { type: 'string', label: 'Task Name' },\n      { type: 'string', label: 'Resource' },\n      { type: 'date', label: 'Start Date' },\n      { type: 'date', label: 'End Date' },\n      { type: 'number', label: 'Duration' },\n      { type: 'number', label: 'Percent Complete' },\n      { type: 'string', label: 'Dependencies' },\n    ], \n    [\n      'EEL',\n      'EEL',\n      null,\n      new Date(2020, 5, 1),\n      new Date(2020, 7, 14),\n      null,\n      100,\n      null,\n    ],\n    [\n      'Umbrella',\n      'Umbrella',\n      null,\n      new Date(2020, 3, 21),\n      new Date(2020, 9, 20),\n      null,\n      100,\n      null,\n    ],\n    [\n      'North Carolina',\n      'North Carolina',\n      null,\n      new Date(2020, 6, 21),\n      new Date(2020, 10, 20),\n      null,\n      100,\n      null,\n    ],\n  ];\n\nclass App extends React.Component {\n  state = {\n    projects: [], allocations: [], employees: []\n  };\n  componentDidMount() {\n    fetch(\"https://localhost:44391/api/employees\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n              employees: result\n          });\n        },\n      )\n  };\n\n  addProject = (projectData) => {\n  \tthis.setState(prevState => ({\n    \tprojects: [...prevState.projects, projectData],\n    }));\n  };\n\n  addAllocation = (employeeData) => {\n  \tthis.setState(prevState => ({\n    \temployees: [...prevState.employees, employeeData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div><h1 style={{textAlign: \"center\"}}>{this.props.title}</h1></div>\n        <CapChart data={projectData} />\n        <ProjectsList employees = {this.state.employees} projects = {this.state.projects} addProject={this.addProject} addAllocation={this.addAllocation}/>\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n  <App title = 'Personal Lines Capacity Management'/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}