{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\mrocc\\\\cap-man\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import*as React from\"react\";import EmployeeList from'./EmployeeList';var AllocationForm=/*#__PURE__*/function(_React$Component){_inherits(AllocationForm,_React$Component);var _super=_createSuper(AllocationForm);function AllocationForm(props){var _this;_classCallCheck(this,AllocationForm);_this=_super.call(this,props);_this.changeHandler=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.state={employee:'',role:'BA',startDate:'',endDate:'',allocation:100,weight:'1'};_this.postAllocation=_this.postAllocation.bind(_assertThisInitialized(_this));_this.putAllocation=_this.putAllocation.bind(_assertThisInitialized(_this));_this.fillState=_this.fillState.bind(_assertThisInitialized(_this));return _this;}_createClass(AllocationForm,[{key:\"postAllocation\",value:function(){var _postAllocation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var _this2=this;var emResult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.prev=1;if(!(this.props.employees.filter(function(employee){return employee.name===_this2.state.employee;}).length===0)){_context.next=14;break;}_context.prev=3;_context.next=6;return fetch('https://localhost:44391/api/employees',{method:'post',headers:{'Accept':'application/json','Content-type':'application/json'},body:JSON.stringify({name:this.state.employee,role:this.state.role})});case 6:emResult=_context.sent;console.log('Result '+emResult);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);console.log(_context.t0);case 13:this.props.refreshState();case 14:fetch('https://localhost:44391/api/allocations',{method:'post',headers:{'Accept':'application/json','Content-type':'application/json'},body:JSON.stringify({projectId:this.props.projectId,employeeId:this.props.employees.filter(function(employee){return employee.name===_this2.state.employee;})[0].id,role:this.state.role,startDate:this.state.startDate,endDate:this.state.endDate,allocation1:this.state.allocation,workWeight:this.state.weight})}).then(function(result){return result.json();}).then(function(json){if(json.length>0){alert(json);}_this2.props.refreshState();});_context.next=20;break;case 17:_context.prev=17;_context.t1=_context[\"catch\"](1);console.log(_context.t1);case 20:this.props.refreshState();case 21:case\"end\":return _context.stop();}}},_callee,this,[[1,17],[3,10]]);}));function postAllocation(_x){return _postAllocation.apply(this,arguments);}return postAllocation;}()},{key:\"putAllocation\",value:function(){var _putAllocation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var _this3=this;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();_context2.prev=1;_context2.next=4;return fetch('https://localhost:44391/api/allocations/'+this.props.id,{method:'put',headers:{'Accept':'application/json','Content-type':'application/json'},body:JSON.stringify({id:this.props.id,projectId:this.props.projectId,employeeId:this.props.employees.filter(function(employee){return employee.name===_this3.state.employee;})[0].id,role:this.state.role,startDate:this.state.startDate,endDate:this.state.endDate,allocation1:this.state.allocation,workWeight:this.state.weight})}).then(function(result){return result.json();}).then(function(json){if(json.length>0){alert(json);}else{_this3.props.toggleEdit();}_this3.props.refreshState();});case 4:_context2.next=9;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](1);console.log(_context2.t0);case 9:this.props.refreshState();case 10:case\"end\":return _context2.stop();}}},_callee2,this,[[1,6]]);}));function putAllocation(_x2){return _putAllocation.apply(this,arguments);}return putAllocation;}()},{key:\"fillState\",value:function fillState(){var _this4=this;var event1=new Date(this.props.startDate);var startDate=JSON.stringify(event1);startDate=startDate.slice(1,8);var event2=new Date(this.props.endDate);var endDate=JSON.stringify(event2);endDate=endDate.slice(1,8);this.setState({employee:this.props.employees.filter(function(employee){return employee.id===_this4.props.employeeId;})[0].name,role:this.props.role,startDate:startDate,endDate:endDate,allocation:this.props.allocation,weight:this.props.weight});}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.isEditing){this.fillState();}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.props.isEditing?this.putAllocation:this.postAllocation,style:{backgroundColor:this.props.isEditing?'#eeddd3':'#d3eedd'}},/*#__PURE__*/React.createElement(\"label\",null,\"Employee: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",list:\"employees\",name:\"employee\",autoComplete:\"off\",value:this.state.employee,onChange:this.changeHandler,required:true}),/*#__PURE__*/React.createElement(\"datalist\",{id:\"employees\"},this.props.employees.map(function(employee){return/*#__PURE__*/React.createElement(EmployeeDropdown,employee);})),/*#__PURE__*/React.createElement(\"label\",null,\" Role: \"),/*#__PURE__*/React.createElement(\"select\",{type:\"text\",name:\"role\",value:this.state.role,onChange:this.changeHandler,required:true},/*#__PURE__*/React.createElement(\"option\",null,\"BA\"),/*#__PURE__*/React.createElement(\"option\",null,\"QA\"),/*#__PURE__*/React.createElement(\"option\",null,\"Dev\")),/*#__PURE__*/React.createElement(\"label\",null,\" Start Month: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"month\",min:\"2020-07\",name:\"startDate\",value:this.state.startDate,onChange:this.changeHandler,required:true,style:{width:\"145px\"}}),/*#__PURE__*/React.createElement(\"label\",null,\" End Month: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"month\",min:\"2020-07\",name:\"endDate\",value:this.state.endDate,onChange:this.changeHandler,style:{width:\"145px\"}}),/*#__PURE__*/React.createElement(\"label\",null,\" Allocation: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",min:\"0\",max:\"100\",step:\"0.01\",name:\"allocation\",value:this.state.allocation,onChange:this.changeHandler,required:true}),/*#__PURE__*/React.createElement(\"label\",null,\" Weight: \"),/*#__PURE__*/React.createElement(\"select\",{type:\"text\",name:\"weight\",value:this.state.weight,onChange:this.changeHandler},/*#__PURE__*/React.createElement(\"option\",null,\".25\"),/*#__PURE__*/React.createElement(\"option\",null,\".50\"),/*#__PURE__*/React.createElement(\"option\",null,\".75\"),/*#__PURE__*/React.createElement(\"option\",null,\"1\")),this.props.isEditing?/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:this.props.toggleEdit},\"Cancel\"),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Confirm\")):/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Add Allocation\")));}}]);return AllocationForm;}(React.Component);var EmployeeDropdown=/*#__PURE__*/function(_React$Component2){_inherits(EmployeeDropdown,_React$Component2);var _super2=_createSuper(EmployeeDropdown);function EmployeeDropdown(){_classCallCheck(this,EmployeeDropdown);return _super2.apply(this,arguments);}_createClass(EmployeeDropdown,[{key:\"render\",value:function render(){var employee=this.props;return/*#__PURE__*/React.createElement(\"option\",null,employee.name);}}]);return EmployeeDropdown;}(React.Component);export default AllocationForm;","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/AllocationList.js"],"names":["React","EmployeeList","AllocationForm","props","changeHandler","event","setState","target","name","value","state","employee","role","startDate","endDate","allocation","weight","postAllocation","bind","putAllocation","fillState","preventDefault","employees","filter","length","fetch","method","headers","body","JSON","stringify","emResult","console","log","refreshState","projectId","employeeId","id","allocation1","workWeight","then","result","json","alert","toggleEdit","event1","Date","slice","event2","isEditing","backgroundColor","map","width","Component","EmployeeDropdown"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport EmployeeList from './EmployeeList'\r\n\r\nclass AllocationForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employee : '',\r\n            role: 'BA',\r\n            startDate : '',\r\n            endDate : '',\r\n            allocation: 100,\r\n            weight : '1'\r\n        }\r\n        this.postAllocation = this.postAllocation.bind(this);\r\n        this.putAllocation = this.putAllocation.bind(this);\r\n        this.fillState = this.fillState.bind(this);\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n    \r\n    async postAllocation(event) {\r\n        event.preventDefault();\r\n        try { \r\n            if (this.props.employees.filter(employee => employee.name === this.state.employee).length === 0) {\r\n                try { \r\n                    const emResult = await fetch('https://localhost:44391/api/employees', {\r\n                        method: 'post',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type':'application/json',\r\n                        },\r\n                        body: JSON.stringify({\r\n                            name : this.state.employee,\r\n                            role : this.state.role\r\n                        })\r\n                    });\r\n        \r\n                    console.log('Result ' + emResult)\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n                this.props.refreshState();\r\n            }\r\n            fetch('https://localhost:44391/api/allocations', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    projectId: this.props.projectId,\r\n                    employeeId: \r\n                    this.props.employees.filter(employee => employee.name === this.state.employee)[0].id,\r\n                    role: this.state.role,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate,\r\n                    allocation1: this.state.allocation,\r\n                    workWeight: this.state.weight,\r\n                })\r\n            })\r\n            .then(result => result.json())\r\n            .then(json => {\r\n                if (json.length > 0) {\r\n                    alert(json);\r\n                }  \r\n                this.props.refreshState();     \r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.props.refreshState();\r\n    }\r\n\r\n    async putAllocation(event) {\r\n        event.preventDefault();\r\n        try {\r\n            await fetch('https://localhost:44391/api/allocations/' + this.props.id, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type':'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    id: this.props.id,\r\n                    projectId: this.props.projectId,\r\n                    employeeId:this.props.employees.filter(employee => employee.name === this.state.employee)[0].id,\r\n                    role: this.state.role,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate,\r\n                    allocation1: this.state.allocation,\r\n                    workWeight: this.state.weight,\r\n                })\r\n            })\r\n            .then(result => result.json())\r\n            .then(json => {\r\n                if (json.length > 0) {\r\n                    alert(json);\r\n                }  \r\n                else {\r\n                    this.props.toggleEdit();\r\n                }\r\n                this.props.refreshState();     \r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        this.props.refreshState();   \r\n    }\r\n\r\n    fillState() {\r\n        var event1 = new Date(this.props.startDate);\r\n        let startDate = JSON.stringify(event1)\r\n        startDate = startDate.slice(1,8)\r\n        var event2 = new Date(this.props.endDate);\r\n        let endDate = JSON.stringify(event2)\r\n        endDate = endDate.slice(1,8)\r\n        this.setState({\r\n            employee : \r\n            this.props.employees.filter(employee => employee.id === this.props.employeeId)[0].name,\r\n            role: this.props.role,\r\n            startDate : startDate,\r\n            endDate : endDate,\r\n            allocation: this.props.allocation,\r\n            weight : this.props.weight\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isEditing) {\r\n            this.fillState();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\t\t\t<div>\r\n            <form \r\n                onSubmit={this.props.isEditing ? this.putAllocation : this.postAllocation} \r\n                style={{backgroundColor: this.props.isEditing ? '#eeddd3' :'#d3eedd'}}\r\n            >\r\n\t\t\t<label >Employee: </label>\r\n            <input type=\"text\" list=\"employees\"\r\n            name = 'employee'\r\n            autoComplete = \"off\"\r\n            value = {this.state.employee}\r\n            onChange = {this.changeHandler}\r\n            required/>\r\n            <datalist id=\"employees\">\r\n                {this.props.employees.map(employee => <EmployeeDropdown {...employee}/>)}\r\n            </datalist>\r\n            <label > Role: </label>\r\n            <select type = \"text\" \r\n            name = 'role'\r\n            value = {this.state.role}\r\n            onChange = {this.changeHandler}\r\n            required>\r\n                <option>BA</option>\r\n                <option>QA</option>\r\n                <option>Dev</option>\r\n            </select>\r\n            <label > Start Month: </label>\r\n            <input type=\"month\" min=\"2020-07\" \r\n            name = 'startDate'\r\n            value = {this.state.startDate}\r\n            onChange = {this.changeHandler}\r\n            required\r\n            style={{width: \"145px\"}}/>\r\n            <label > End Month: </label>\r\n            <input type=\"month\" min=\"2020-07\"\r\n            name = 'endDate'\r\n            value = {this.state.endDate}\r\n            onChange = {this.changeHandler}\r\n            style={{width: \"145px\"}}/>\r\n            <label> Allocation: </label>\r\n            <input \r\n            type=\"number\" min=\"0\" max=\"100\" step=\"0.01\" \r\n            name = 'allocation'\r\n            value = {this.state.allocation}\r\n            onChange = {this.changeHandler}\r\n            required \r\n            />\r\n            <label> Weight: </label>\r\n            <select type = \"text\" \r\n            name = 'weight'\r\n            value = {this.state.weight}\r\n            onChange = {this.changeHandler}>\r\n                <option>.25</option>\r\n                <option>.50</option>\r\n                <option>.75</option>\r\n                <option>1</option>\r\n            </select>        \r\n            {this.props.isEditing ? <span><button onClick = {this.props.toggleEdit}>Cancel</button><button type = 'submit'>Confirm</button></span> : <button type = 'submit'>Add Allocation</button>}\r\n\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nclass EmployeeDropdown extends React.Component {\r\n\trender() {\r\n  \tconst employee = this.props;\r\n  \treturn (\r\n        <option>{employee.name}</option>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllocationForm;"]},"metadata":{},"sourceType":"module"}