{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrocc\\\\cap-man\\\\src\\\\EmployeeList.js\";\nimport * as React from \"react\";\n\nclass EmployeeList extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#eeddd3'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 4\n      }\n    }, this.props.employees.map(employee => ['BA', 'QA', 'Dev'].map(role => {\n      if (this.props.allocations.filter(allocation => allocation.role === role && allocation.employeeId === employee.id && allocation.projectId === this.props.projectId).length > 0) return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 32\n        }\n      }, employee.name, \" \", role, this.props.allocations.filter(allocation => allocation.role === role && allocation.employeeId === employee.id && allocation.projectId === this.props.projectId).map(allocation => /*#__PURE__*/React.createElement(Allocation, Object.assign({\n        refreshState: this.props.refreshState\n      }, allocation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 52\n        }\n      }))));\n    })));\n  }\n\n}\n\nclass Allocation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    };\n    this.deleteAllocation = this.deleteAllocation.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n  }\n\n  toggleEdit() {\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  }\n\n  async deleteAllocation(id) {\n    if (window.confirm('Are you sure')) {\n      try {\n        const result = await fetch('https://localhost:44391/api/allocations/' + this.props.id, {\n          method: 'delete',\n          headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n          }\n        });\n        console.log('Result ' + result);\n      } catch (e) {\n        console.log(e);\n      }\n\n      this.props.refreshState();\n    }\n  }\n\n  render() {\n    const allocation = this.props;\n\n    if (this.props.isEditing) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#eeddd3'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"Months: \", allocation.startDate.substring(5, 7), \"/\", allocation.startDate.substring(0, 4), \" - \", allocation.endDate.substring(5, 7), \"/\", allocation.endDate.substring(0, 4), \" Allocation: \", allocation.allocation1, \"% Weight: \", allocation.workWeight, /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.deleteAllocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://icon-library.com/images/delete-icon-png-16x16/delete-icon-png-16x16-21.jpg\",\n        alt: \"my image\",\n        width: \"12\",\n        height: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 55\n        }\n      })));\n    }\n  }\n\n}\n\nexport default EmployeeList;","map":{"version":3,"sources":["C:/Users/mrocc/cap-man/src/EmployeeList.js"],"names":["React","EmployeeList","Component","render","backgroundColor","props","employees","map","employee","role","allocations","filter","allocation","employeeId","id","projectId","length","name","refreshState","Allocation","constructor","state","isEditing","deleteAllocation","bind","toggleEdit","setState","window","confirm","result","fetch","method","headers","console","log","e","startDate","substring","endDate","allocation1","workWeight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\nclass EmployeeList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n\t\t\t<div style = {{backgroundColor : '#eeddd3'}}>\r\n                  {this.props.employees.map(employee => \r\n                    ['BA', 'QA', 'Dev'].map(role => {\r\n                        if (\r\n                            this.props.allocations.filter(\r\n                            allocation => (allocation.role === role\r\n                            && allocation.employeeId === employee.id\r\n                            && allocation.projectId === this.props.projectId)).length > 0\r\n                        )\r\n                        return <div>\r\n                            {employee.name} {role}\r\n                            {this.props.allocations.filter(allocation =>\r\n                                allocation.role === role\r\n                                && allocation.employeeId === employee.id \r\n                                && allocation.projectId === this.props.projectId)\r\n                                .map(allocation => <Allocation refreshState = {this.props.refreshState} {...allocation}/>                \r\n                                )}\r\n                        </div>   \r\n                    }              \r\n                    )\r\n                )}\r\n\t\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Allocation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isEditing: false\r\n        }\r\n        this.deleteAllocation = this.deleteAllocation.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n    }\r\n\r\n    toggleEdit() {\r\n        this.setState ({\r\n            isEditing: !this.state.isEditing\r\n        })\r\n    }\r\n\r\n    async deleteAllocation(id) {\r\n        if(window.confirm('Are you sure')) {\r\n            \r\n            try { \r\n                const result = await fetch('https://localhost:44391/api/allocations/' + this.props.id, {\r\n                    method: 'delete',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type':'application/json',\r\n                    }\r\n                })\r\n    \r\n                console.log('Result ' + result)\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n            this.props.refreshState();\r\n        }\r\n    }\r\n\r\n \trender() {\r\n      const allocation = this.props;\r\n      if (this.props.isEditing) {\r\n        return (\r\n            <div/>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n            <div style = {{backgroundColor : '#eeddd3'}}>\r\n              Months: {allocation.startDate.substring(5, 7)}/{allocation.startDate.substring(0, 4)} - {allocation.endDate.substring(5, 7)}/{allocation.endDate.substring(0, 4)} Allocation: {allocation.allocation1}%\r\n               Weight: {allocation.workWeight}\r\n               <button>Update</button>\r\n              <button onClick={this.deleteAllocation}><img src=\"https://icon-library.com/images/delete-icon-png-16x16/delete-icon-png-16x16-21.jpg\" alt=\"my image\" width=\"12\" height=\"12\"/></button>\r\n            </div>\r\n        );\r\n      }\r\n  \t\r\n  }\r\n}\r\nexport default EmployeeList;"]},"metadata":{},"sourceType":"module"}